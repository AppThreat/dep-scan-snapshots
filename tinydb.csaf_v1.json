{
  "document": {
    "aggregate_severity": {
      "text": "High"
    },
    "category": "csaf_vex",
    "csaf_version": "2.0",
    "lang": "en",
    "notes": [
      {
        "category": "legal_disclaimer",
        "text": "Depscan reachable code only covers the project source code, not the code of dependencies. A dependency may execute vulnerable code when called even if it is not in the project's source code. Regard the Depscan-set flag of 'code_not_in_execute_path' with this in mind."
      }
    ],
    "publisher": {
      "category": "vendor",
      "contact_details": "vendor@mcvendorson.com",
      "name": "Vendor McVendorson",
      "namespace": "https://appthreat.com"
    },
    "title": "Your Title",
    "tracking": {
      "current_release_date": "2024-10-15T22:50:20",
      "id": "2024-10-15T22:50:20_v1",
      "initial_release_date": "2024-10-15T22:50:20",
      "revision_history": [],
      "status": "draft",
      "version": "1"
    }
  },
  "product_tree": {
    "full_product_names": [
      {
        "name": "tinydb",
        "product_id": "tinydb:4.8.0",
        "product_identification_helper": {
          "purl": "pkg:pypi/tinydb@4.8.0"
        }
      }
    ]
  },
  "vulnerabilities": [
    {
      "acknowledgements": [
        {
          "organization": "NVD",
          "urls": [
            "https://nvd.nist.gov/vuln/detail/CVE-2024-39689"
          ]
        }
      ],
      "cve": "CVE-2024-39689",
      "cwe": {
        "id": "345",
        "name": "Insufficient Verification of Data Authenticity"
      },
      "discovery_date": "2024-07-05T20:06:40",
      "ids": [
        {
          "system_name": "CVE Record",
          "text": "CVE-2024-39689"
        },
        {
          "system_name": "GitHub Advisory",
          "text": "GHSA-248V-346W-9CWC"
        }
      ],
      "notes": [
        {
          "category": "description",
          "details": "Vulnerability Description",
          "text": "Certifi removes GLOBALTRUST root certificate"
        },
        {
          "category": "details",
          "details": "Vulnerability Details",
          "text": "# Certifi removes GLOBALTRUST root certificate Certifi 2024.07.04 removes root certificates from \"GLOBALTRUST\" from the root store. These are in the process of being removed from Mozilla's trust store.  GLOBALTRUST's root certificates are being removed pursuant to an investigation which identified \"long-running and unresolved compliance issues\". Conclusions of Mozilla's investigation can be found [here]( https://groups.google.com/a/mozilla.org/g/dev-security-policy/c/XpknYMPO8dI)."
        },
        {
          "category": "other",
          "text": "Update to version 2024.07.04.",
          "title": "Recommended Action"
        }
      ],
      "product_status": {
        "known_affected": [
          "certifi@vers:pypi/>=2021.05.30|<2024.07.04"
        ],
        "known_not_affected": [
          "certifi@2024.07.04"
        ]
      },
      "references": [
        {
          "summary": "GitHub Advisory",
          "url": "https://github.com/certifi/python-certifi/security/advisories/GHSA-248v-346w-9cwc"
        },
        {
          "summary": "Google Mailing List",
          "url": "https://groups.google.com/a/mozilla.org/g/dev-security-policy/c/XpknYMPO8dI"
        },
        {
          "summary": "CVE Record",
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-39689"
        }
      ],
      "scores": [
        {
          "cvss_v3": {
            "attackComplexity": "HIGH",
            "attackVector": "NETWORK",
            "availabilityImpact": "NONE",
            "baseScore": 3.1,
            "baseSeverity": "LOW",
            "confidentialityImpact": "LOW",
            "environmentalScore": 3.1,
            "environmentalSeverity": "LOW",
            "integrityImpact": "NONE",
            "modifiedAttackComplexity": "HIGH",
            "modifiedAttackVector": "NETWORK",
            "modifiedAvailabilityImpact": "NONE",
            "modifiedConfidentialityImpact": "LOW",
            "modifiedIntegrityImpact": "NONE",
            "modifiedPrivilegesRequired": "NONE",
            "modifiedScope": "UNCHANGED",
            "modifiedUserInteraction": "REQUIRED",
            "privilegesRequired": "NONE",
            "scope": "UNCHANGED",
            "temporalScore": 3.1,
            "temporalSeverity": "LOW",
            "userInteraction": "REQUIRED",
            "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N",
            "version": "3.1"
          },
          "products": [
            "certifi@vers:pypi/>=2021.05.30|<2024.07.04"
          ]
        }
      ],
      "title": "CVE-2024-39689/pkg:pypi/certifi@2023.7.22"
    },
    {
      "acknowledgements": [
        {
          "organization": "NVD",
          "urls": [
            "https://nvd.nist.gov/vuln/detail/CVE-2024-3651"
          ]
        }
      ],
      "cve": "CVE-2024-3651",
      "cwe": {
        "id": "400",
        "name": "Uncontrolled Resource Consumption"
      },
      "discovery_date": "2024-04-11T21:32:40",
      "ids": [
        {
          "system_name": "Huntr Advisory",
          "text": "93D78D07-D791-4B39-A845-CBFABC44AADB"
        },
        {
          "system_name": "CVE Record",
          "text": "CVE-2024-3651"
        },
        {
          "system_name": "GitHub Advisory",
          "text": "GHSA-JJG7-2V4V-X38H"
        },
        {
          "system_name": "GitHub Advisory",
          "text": "PYSEC-2024-60"
        }
      ],
      "notes": [
        {
          "category": "description",
          "details": "Vulnerability Description",
          "text": "Internationalized Domain Names in Applications (IDNA) vulnerable to denial of service from specially crafted inputs to idna.encode"
        },
        {
          "category": "details",
          "details": "Vulnerability Details",
          "text": "# Internationalized Domain Names in Applications (IDNA) vulnerable to denial of service from specially crafted inputs to idna.encode ### Impact A specially crafted argument to the `idna.encode()` function could consume significant resources. This may lead to a denial-of-service.  ### Patches The function has been refined to reject such strings without the associated resource consumption in version 3.7.  ### Workarounds Domain names cannot exceed 253 characters in length, if this length limit is enforced prior to passing the domain to the `idna.encode()` function it should no longer consume significant resources. This is triggered by arbitrarily large inputs that would not occur in normal usage, but may be passed to the library assuming there is no preliminary input validation by the higher-level application.  ### References * https://huntr.com/bounties/93d78d07-d791-4b39-a845-cbfabc44aadb  ## Related CVE(s) CVE-2024-3651, PYSEC-2024-60"
        }
      ],
      "product_status": {
        "known_affected": [
          "idna@vers:pypi/>=0.1|<=3.6"
        ]
      },
      "references": [
        {
          "summary": "GitHub Advisory",
          "url": "https://github.com/kjd/idna/security/advisories/GHSA-jjg7-2v4v-x38h"
        },
        {
          "summary": "GitHub Advisory",
          "url": "https://github.com/pypa/advisory-database/tree/main/vulns/idna/PYSEC-2024-60.yaml"
        },
        {
          "summary": "Huntr Advisory",
          "url": "https://huntr.com/bounties/93d78d07-d791-4b39-a845-cbfabc44aadb"
        },
        {
          "summary": "CVE Record",
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-3651"
        }
      ],
      "scores": [
        {
          "cvss_v3": {
            "attackComplexity": "LOW",
            "attackVector": "LOCAL",
            "availabilityImpact": "HIGH",
            "baseScore": 6.2,
            "baseSeverity": "MEDIUM",
            "confidentialityImpact": "NONE",
            "environmentalScore": 6.2,
            "environmentalSeverity": "MEDIUM",
            "integrityImpact": "NONE",
            "modifiedAttackComplexity": "LOW",
            "modifiedAttackVector": "LOCAL",
            "modifiedAvailabilityImpact": "HIGH",
            "modifiedConfidentialityImpact": "NONE",
            "modifiedIntegrityImpact": "NONE",
            "modifiedPrivilegesRequired": "NONE",
            "modifiedScope": "UNCHANGED",
            "modifiedUserInteraction": "NONE",
            "privilegesRequired": "NONE",
            "scope": "UNCHANGED",
            "temporalScore": 6.2,
            "temporalSeverity": "MEDIUM",
            "userInteraction": "NONE",
            "vectorString": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "version": "3.1"
          },
          "products": [
            "idna@vers:pypi/>=0.1|<=3.6"
          ]
        }
      ],
      "title": "CVE-2024-3651/pkg:pypi/idna@3.4"
    },
    {
      "acknowledgements": [
        {
          "organization": "NVD",
          "urls": [
            "https://nvd.nist.gov/vuln/detail/CVE-2024-22195"
          ]
        }
      ],
      "cve": "CVE-2024-22195",
      "cwe": {
        "id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation"
      },
      "discovery_date": "2024-01-11T15:20:48",
      "ids": [
        {
          "system_name": "CVE Record",
          "text": "CVE-2024-22195"
        },
        {
          "system_name": "GitHub Advisory",
          "text": "GHSA-H5C8-RQWP-CP95"
        }
      ],
      "notes": [
        {
          "category": "description",
          "details": "Vulnerability Description",
          "text": "Jinja vulnerable to HTML attribute injection when passing user input as keys to xmlattr filter"
        },
        {
          "category": "details",
          "details": "Vulnerability Details",
          "text": "# Jinja vulnerable to HTML attribute injection when passing user input as keys to xmlattr filter The `xmlattr` filter in affected versions of Jinja accepts keys containing spaces. XML/HTML attributes cannot contain spaces, as each would then be interpreted as a separate attribute. If an application accepts keys (as opposed to only values) as user input, and renders these in pages that other users see as well, an attacker could use this to inject other attributes and perform XSS. Note that accepting keys as user input is not common or a particularly intended use case of the `xmlattr` filter, and an application doing so should already be verifying what keys are provided regardless of this fix."
        }
      ],
      "product_status": {
        "known_affected": [
          "jinja2@vers:pypi/>=2.0|<=3.1.2"
        ]
      },
      "references": [
        {
          "summary": "GitHub Advisory",
          "url": "https://github.com/pallets/jinja/security/advisories/GHSA-h5c8-rqwp-cp95"
        },
        {
          "summary": "Debian Mailing List",
          "url": "https://lists.debian.org/debian-lts-announce/2024/01/msg00010.html"
        },
        {
          "summary": "Fedora Project Mailing List",
          "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5XCWZD464AJJJUBOO7CMPXQ4ROBC6JX2"
        },
        {
          "summary": "Fedora Project Mailing List",
          "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DELCVUUYX75I5K4Q5WMJG4MUZJA6VAIP"
        },
        {
          "summary": "Fedora Project Mailing List",
          "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/O7YWRBX6JQCWC2XXCTZ55C7DPMGICCN3"
        },
        {
          "summary": "CVE Record",
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-22195"
        }
      ],
      "scores": [
        {
          "cvss_v3": {
            "attackComplexity": "LOW",
            "attackVector": "NETWORK",
            "availabilityImpact": "NONE",
            "baseScore": 5.4,
            "baseSeverity": "MEDIUM",
            "confidentialityImpact": "LOW",
            "environmentalScore": 5.4,
            "environmentalSeverity": "MEDIUM",
            "integrityImpact": "LOW",
            "modifiedAttackComplexity": "LOW",
            "modifiedAttackVector": "NETWORK",
            "modifiedAvailabilityImpact": "NONE",
            "modifiedConfidentialityImpact": "LOW",
            "modifiedIntegrityImpact": "LOW",
            "modifiedPrivilegesRequired": "NONE",
            "modifiedScope": "UNCHANGED",
            "modifiedUserInteraction": "REQUIRED",
            "privilegesRequired": "NONE",
            "scope": "UNCHANGED",
            "temporalScore": 5.4,
            "temporalSeverity": "MEDIUM",
            "userInteraction": "REQUIRED",
            "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N",
            "version": "3.1"
          },
          "products": [
            "jinja2@vers:pypi/>=2.0|<=3.1.2"
          ]
        }
      ],
      "title": "CVE-2024-22195/pkg:pypi/jinja2@3.1.2"
    },
    {
      "acknowledgements": [
        {
          "organization": "NVD",
          "urls": [
            "https://nvd.nist.gov/vuln/detail/CVE-2024-34064"
          ]
        }
      ],
      "cve": "CVE-2024-34064",
      "cwe": {
        "id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation"
      },
      "discovery_date": "2024-05-06T14:20:59",
      "ids": [
        {
          "system_name": "CVE Record",
          "text": "CVE-2024-34064"
        },
        {
          "system_name": "GitHub Advisory",
          "text": "GHSA-H75V-3VVJ-5MFJ"
        }
      ],
      "notes": [
        {
          "category": "description",
          "details": "Vulnerability Description",
          "text": "Jinja vulnerable to HTML attribute injection when passing user input as keys to xmlattr filter"
        },
        {
          "category": "details",
          "details": "Vulnerability Details",
          "text": "# Jinja vulnerable to HTML attribute injection when passing user input as keys to xmlattr filter The `xmlattr` filter in affected versions of Jinja accepts keys containing non-attribute characters. XML/HTML attributes cannot contain spaces, `/`, `>`, or `=`, as each would then be interpreted as starting a separate attribute. If an application accepts keys (as opposed to only values) as user input, and renders these in pages that other users see as well, an attacker could use this to inject other attributes and perform XSS. The fix for the previous GHSA-h5c8-rqwp-cp95 CVE-2024-22195 only addressed spaces but not other characters.  Accepting keys as user input is now explicitly considered an unintended use case of the `xmlattr` filter, and code that does so without otherwise validating the input should be flagged as insecure, regardless of Jinja version. Accepting _values_ as user input continues to be safe."
        }
      ],
      "product_status": {
        "known_affected": [
          "jinja2@vers:pypi/>=2.0|<=3.1.3"
        ]
      },
      "references": [
        {
          "summary": "GitHub Advisory",
          "url": "https://github.com/pallets/jinja/security/advisories/GHSA-h75v-3vvj-5mfj"
        },
        {
          "summary": "Fedora Project Mailing List",
          "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/567XIGSZMABG6TSMYWD7MIYNJSUQQRUC"
        },
        {
          "summary": "Fedora Project Mailing List",
          "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GCLF44KY43BSVMTE6S53B4V5WP3FRRSE"
        },
        {
          "summary": "Fedora Project Mailing List",
          "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SSCBHIL6BYKR5NRCBXP4XMP2CEEKGFVS"
        },
        {
          "summary": "Fedora Project Mailing List",
          "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZALNWE3TXPPHVPSI3AZ5CTMSTAVN5UMS"
        },
        {
          "summary": "CVE Record",
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-34064"
        }
      ],
      "scores": [
        {
          "cvss_v3": {
            "attackComplexity": "LOW",
            "attackVector": "NETWORK",
            "availabilityImpact": "NONE",
            "baseScore": 5.4,
            "baseSeverity": "MEDIUM",
            "confidentialityImpact": "LOW",
            "environmentalScore": 5.4,
            "environmentalSeverity": "MEDIUM",
            "integrityImpact": "LOW",
            "modifiedAttackComplexity": "LOW",
            "modifiedAttackVector": "NETWORK",
            "modifiedAvailabilityImpact": "NONE",
            "modifiedConfidentialityImpact": "LOW",
            "modifiedIntegrityImpact": "LOW",
            "modifiedPrivilegesRequired": "NONE",
            "modifiedScope": "UNCHANGED",
            "modifiedUserInteraction": "REQUIRED",
            "privilegesRequired": "NONE",
            "scope": "UNCHANGED",
            "temporalScore": 5.4,
            "temporalSeverity": "MEDIUM",
            "userInteraction": "REQUIRED",
            "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N",
            "version": "3.1"
          },
          "products": [
            "jinja2@vers:pypi/>=2.0|<=3.1.3"
          ]
        }
      ],
      "title": "CVE-2024-34064/pkg:pypi/jinja2@3.1.2"
    },
    {
      "acknowledgements": [
        {
          "organization": "NVD",
          "urls": [
            "https://nvd.nist.gov/vuln/detail/CVE-2022-42969"
          ]
        }
      ],
      "cve": "CVE-2022-42969",
      "cwe": {
        "id": "1333",
        "name": "Inefficient Regular Expression Complexity"
      },
      "discovery_date": "2022-10-16T12:00:23",
      "ids": [
        {
          "system_name": "CVE Record",
          "text": "CVE-2022-42969"
        }
      ],
      "notes": [
        {
          "category": "description",
          "details": "Vulnerability Description",
          "text": "ReDoS in py library when used with subversion "
        },
        {
          "category": "details",
          "details": "Vulnerability Details",
          "text": "# ReDoS in py library when used with subversion  The py library through 1.11.0 for Python allows remote attackers to conduct a ReDoS (Regular expression Denial of Service) attack via a Subversion repository with crafted info data, because the InfoSvnCommand argument is mishandled.  The particular codepath in question is the regular expression at `py._path.svnurl.InfoSvnCommand.lspattern` and is only relevant when dealing with subversion (svn) projects. Notably the codepath is not used in the popular pytest project. The developers of the pytest package have released version `7.2.0` which removes their dependency on `py`. Users of `pytest` seeing alerts relating to this advisory may update to version `7.2.0` of `pytest` to resolve this issue. See https://github.com/pytest-dev/py/issues/287#issuecomment-1290407715 for additional context.  ## Related CVE(s) CVE-2022-42969, PYSEC-2022-42969"
        }
      ],
      "product_status": {
        "known_affected": [
          "py@vers:pypi/>=0.0.0|<=1.11.0"
        ]
      },
      "references": [
        {
          "summary": "CVE Record",
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-42969"
        }
      ],
      "scores": [
        {
          "cvss_v3": {
            "attackComplexity": "LOW",
            "attackVector": "NETWORK",
            "availabilityImpact": "HIGH",
            "baseScore": 7.5,
            "baseSeverity": "HIGH",
            "confidentialityImpact": "NONE",
            "environmentalScore": 7.5,
            "environmentalSeverity": "HIGH",
            "integrityImpact": "NONE",
            "modifiedAttackComplexity": "LOW",
            "modifiedAttackVector": "NETWORK",
            "modifiedAvailabilityImpact": "HIGH",
            "modifiedConfidentialityImpact": "NONE",
            "modifiedIntegrityImpact": "NONE",
            "modifiedPrivilegesRequired": "NONE",
            "modifiedScope": "UNCHANGED",
            "modifiedUserInteraction": "NONE",
            "privilegesRequired": "NONE",
            "scope": "UNCHANGED",
            "temporalScore": 7.5,
            "temporalSeverity": "HIGH",
            "userInteraction": "NONE",
            "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "version": "3.1"
          },
          "products": [
            "py@vers:pypi/>=0.0.0|<=1.11.0"
          ]
        }
      ],
      "title": "CVE-2022-42969/pkg:pypi/py@1.11.0"
    },
    {
      "acknowledgements": [
        {
          "organization": "NVD",
          "urls": [
            "https://nvd.nist.gov/vuln/detail/CVE-2024-35195"
          ]
        }
      ],
      "cve": "CVE-2024-35195",
      "cwe": {
        "id": "670",
        "name": "Always-Incorrect Control Flow Implementation"
      },
      "discovery_date": "2024-05-20T20:15:00",
      "ids": [
        {
          "system_name": "CVE Record",
          "text": "CVE-2024-35195"
        },
        {
          "system_name": "GitHub Advisory",
          "text": "GHSA-9WX4-H78V-VM56"
        }
      ],
      "notes": [
        {
          "category": "description",
          "details": "Vulnerability Description",
          "text": "Requests `Session` object does not verify requests after making first request with verify=False"
        },
        {
          "category": "details",
          "details": "Vulnerability Details",
          "text": "# Requests `Session` object does not verify requests after making first request with verify=False When making requests through a Requests `Session`, if the first request is made with `verify=False` to disable cert verification, all subsequent requests to the same origin will continue to ignore cert verification regardless of changes to the value of `verify`. This behavior will continue for the lifecycle of the connection in the connection pool.  ### Remediation Any of these options can be used to remediate the current issue, we highly recommend upgrading as the preferred mitigation.  * Upgrade to `requests>=2.32.0`. * For `requests<2.32.0`, avoid setting `verify=False` for the first request to a host while using a Requests Session. * For `requests<2.32.0`, call `close()` on `Session` objects to clear existing connections if `verify=False` is used.  ### Related Links * https://github.com/psf/requests/pull/6655"
        },
        {
          "category": "other",
          "text": "Update to version 2.32.0.",
          "title": "Recommended Action"
        }
      ],
      "product_status": {
        "known_affected": [
          "requests@vers:pypi/>=0.0.0|<2.32.0"
        ],
        "known_not_affected": [
          "requests@2.32.0"
        ]
      },
      "references": [
        {
          "summary": "GitHub Advisory",
          "url": "https://github.com/psf/requests/security/advisories/GHSA-9wx4-h78v-vm56"
        },
        {
          "summary": "Fedora Project Mailing List",
          "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/IYLSNK5TL46Q6XPRVMHVWS63MVJQOK4Q"
        },
        {
          "summary": "Fedora Project Mailing List",
          "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/N7WP6EYDSUOCOJYHDK5NX43PYZ4SNHGZ"
        },
        {
          "summary": "CVE Record",
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-35195"
        }
      ],
      "scores": [
        {
          "cvss_v3": {
            "attackComplexity": "HIGH",
            "attackVector": "LOCAL",
            "availabilityImpact": "NONE",
            "baseScore": 5.6,
            "baseSeverity": "MEDIUM",
            "confidentialityImpact": "HIGH",
            "environmentalScore": 5.6,
            "environmentalSeverity": "MEDIUM",
            "integrityImpact": "HIGH",
            "modifiedAttackComplexity": "HIGH",
            "modifiedAttackVector": "LOCAL",
            "modifiedAvailabilityImpact": "NONE",
            "modifiedConfidentialityImpact": "HIGH",
            "modifiedIntegrityImpact": "HIGH",
            "modifiedPrivilegesRequired": "HIGH",
            "modifiedScope": "UNCHANGED",
            "modifiedUserInteraction": "REQUIRED",
            "privilegesRequired": "HIGH",
            "scope": "UNCHANGED",
            "temporalScore": 5.6,
            "temporalSeverity": "MEDIUM",
            "userInteraction": "REQUIRED",
            "vectorString": "CVSS:3.1/AV:L/AC:H/PR:H/UI:R/S:U/C:H/I:H/A:N",
            "version": "3.1"
          },
          "products": [
            "requests@vers:pypi/>=0.0.0|<2.32.0"
          ]
        }
      ],
      "title": "CVE-2024-35195/pkg:pypi/requests@2.31.0"
    },
    {
      "acknowledgements": [
        {
          "organization": "NVD",
          "urls": [
            "https://nvd.nist.gov/vuln/detail/CVE-2024-37891"
          ]
        }
      ],
      "cve": "CVE-2024-37891",
      "cwe": {
        "id": "669",
        "name": "Incorrect Resource Transfer Between Spheres"
      },
      "discovery_date": "2024-06-17T21:37:20",
      "ids": [
        {
          "system_name": "CVE Record",
          "text": "CVE-2024-37891"
        },
        {
          "system_name": "GitHub Advisory",
          "text": "GHSA-34JH-P97F-MPXF"
        }
      ],
      "notes": [
        {
          "category": "description",
          "details": "Vulnerability Description",
          "text": "urllib3's Proxy-Authorization request header isn't stripped during cross-origin redirects "
        },
        {
          "category": "details",
          "details": "Vulnerability Details",
          "text": "# urllib3's Proxy-Authorization request header isn't stripped during cross-origin redirects  When using urllib3's proxy support with `ProxyManager`, the `Proxy-Authorization` header is only sent to the configured proxy, as expected.  However, when sending HTTP requests *without* using urllib3's proxy support, it's possible to accidentally configure the `Proxy-Authorization` header even though it won't have any effect as the request is not using a forwarding proxy or a tunneling proxy. In those cases, urllib3 doesn't treat the `Proxy-Authorization` HTTP header as one carrying authentication material and thus doesn't strip the header on cross-origin redirects.  Because this is a highly unlikely scenario, we believe the severity of this vulnerability is low for almost all users. Out of an abundance of caution urllib3 will automatically strip the `Proxy-Authorization` header during cross-origin redirects to avoid the small chance that users are doing this on accident.  Users should use urllib3's proxy support or disable automatic redirects to achieve safe processing of the `Proxy-Authorization` header, but we still decided to strip the header by default in order to further protect users who aren't using the correct approach.  ## Affected usages  We believe the number of usages affected by this advisory is low. It requires all of the following to be true to be exploited:  * Setting the `Proxy-Authorization` header without using urllib3's built-in proxy support. * Not disabling HTTP redirects. * Either not using an HTTPS origin server or for the proxy or target origin to redirect to a malicious origin.  ## Remediation  * Using the `Proxy-Authorization` header with urllib3's `ProxyManager`. * Disabling HTTP redirects using `redirects=False` when sending requests. * Not using the `Proxy-Authorization` header."
        },
        {
          "category": "other",
          "text": "Update to version 2.2.2.",
          "title": "Recommended Action"
        }
      ],
      "product_status": {
        "known_affected": [
          "urllib3@vers:pypi/>=2.0.0|<2.2.2"
        ],
        "known_not_affected": [
          "urllib3@2.2.2"
        ]
      },
      "references": [
        {
          "summary": "GitHub Advisory",
          "url": "https://github.com/urllib3/urllib3/security/advisories/GHSA-34jh-p97f-mpxf"
        },
        {
          "summary": "CVE Record",
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-37891"
        }
      ],
      "scores": [
        {
          "cvss_v3": {
            "attackComplexity": "HIGH",
            "attackVector": "NETWORK",
            "availabilityImpact": "NONE",
            "baseScore": 4.4,
            "baseSeverity": "MEDIUM",
            "confidentialityImpact": "HIGH",
            "environmentalScore": 4.4,
            "environmentalSeverity": "MEDIUM",
            "integrityImpact": "NONE",
            "modifiedAttackComplexity": "HIGH",
            "modifiedAttackVector": "NETWORK",
            "modifiedAvailabilityImpact": "NONE",
            "modifiedConfidentialityImpact": "HIGH",
            "modifiedIntegrityImpact": "NONE",
            "modifiedPrivilegesRequired": "HIGH",
            "modifiedScope": "UNCHANGED",
            "modifiedUserInteraction": "NONE",
            "privilegesRequired": "HIGH",
            "scope": "UNCHANGED",
            "temporalScore": 4.4,
            "temporalSeverity": "MEDIUM",
            "userInteraction": "NONE",
            "vectorString": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:N/A:N",
            "version": "3.1"
          },
          "products": [
            "urllib3@vers:pypi/>=2.0.0|<2.2.2"
          ]
        }
      ],
      "title": "CVE-2024-37891/pkg:pypi/urllib3@2.0.4"
    },
    {
      "acknowledgements": [
        {
          "organization": "NVD",
          "urls": [
            "https://nvd.nist.gov/vuln/detail/CVE-2023-45803"
          ]
        }
      ],
      "cve": "CVE-2023-45803",
      "cwe": {
        "id": "200",
        "name": "Exposure of Sensitive Information to an Unauthorized Actor"
      },
      "discovery_date": "2023-10-17T20:15:25",
      "ids": [
        {
          "system_name": "CVE Record",
          "text": "CVE-2023-45803"
        },
        {
          "system_name": "GitHub Advisory",
          "text": "GHSA-G4MX-Q9VG-27P4"
        },
        {
          "system_name": "GitHub Advisory",
          "text": "PYSEC-2023-212"
        },
        {
          "system_name": "Rfc-editor Advisory",
          "text": "RFC9110"
        }
      ],
      "notes": [
        {
          "category": "description",
          "details": "Vulnerability Description",
          "text": "urllib3's request body not stripped after redirect from 303 status changes request method to GET"
        },
        {
          "category": "details",
          "details": "Vulnerability Details",
          "text": "# urllib3's request body not stripped after redirect from 303 status changes request method to GET urllib3 previously wouldn't remove the HTTP request body when an HTTP redirect response using status 303 \"See Other\" after the request had its method changed from one that could accept a request body (like `POST`) to `GET` as is required by HTTP RFCs. Although the behavior of removing the request body is not specified in the section for redirects, it can be inferred by piecing together information from different sections and we have observed the behavior in other major HTTP client implementations like curl and web browsers.  From [RFC 9110 Section 9.3.1](https://www.rfc-editor.org/rfc/rfc9110.html#name-get):  > A client SHOULD NOT generate content in a GET request unless it is made directly to an origin server that has previously indicated, in or out of band, that such a request has a purpose and will be adequately supported.  ## Affected usages  Because the vulnerability requires a previously trusted service to become compromised in order to have an impact on confidentiality we believe the exploitability of this vulnerability is low. Additionally, many users aren't putting sensitive data in HTTP request bodies, if this is the case then this vulnerability isn't exploitable.  Both of the following conditions must be true to be affected by this vulnerability:  * If you're using urllib3 and submitting sensitive information in the HTTP request body (such as form data or JSON) * The origin service is compromised and starts redirecting using 303 to a malicious peer or the redirected-to service becomes compromised.  ## Remediation  You can remediate this vulnerability with any of the following steps:  * Upgrade to a patched version of urllib3 (v1.26.18 or v2.0.7) * Disable redirects for services that you aren't expecting to respond with redirects with `redirects=False`. * Disable automatic redirects with `redirects=False` and handle 303 redirects manually by stripping the HTTP request body.   ## Related CVE(s) CVE-2023-45803, PYSEC-2023-212"
        },
        {
          "category": "other",
          "text": "Update to version 2.0.7 to resolve CVE-2023-45803 or update to version 2.2.2 to resolve additional vulnerabilities for this package.",
          "title": "Recommended Action"
        }
      ],
      "product_status": {
        "known_affected": [
          "urllib3@vers:pypi/>=2.0.0|<2.0.7"
        ],
        "known_not_affected": [
          "urllib3@2.0.7"
        ]
      },
      "references": [
        {
          "summary": "GitHub Advisory",
          "url": "https://github.com/pypa/advisory-database/tree/main/vulns/urllib3/PYSEC-2023-212.yaml"
        },
        {
          "summary": "GitHub Advisory",
          "url": "https://github.com/urllib3/urllib3/security/advisories/GHSA-g4mx-q9vg-27p4"
        },
        {
          "summary": "Fedora Project Mailing List",
          "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4R2Y5XK3WALSR3FNAGN7JBYV2B343ZKB"
        },
        {
          "summary": "Fedora Project Mailing List",
          "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5F5CUBAN5XMEBVBZPHFITBLMJV5FIJJ5"
        },
        {
          "summary": "Fedora Project Mailing List",
          "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PPDPLM6UUMN55ESPQWJFLLIZY4ZKCNRX"
        },
        {
          "summary": "CVE Record",
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-45803"
        },
        {
          "summary": "Rfc-editor Advisory",
          "url": "https://www.rfc-editor.org/rfc/rfc9110.html#name-get"
        }
      ],
      "scores": [
        {
          "cvss_v3": {
            "attackComplexity": "HIGH",
            "attackVector": "ADJACENT_NETWORK",
            "availabilityImpact": "NONE",
            "baseScore": 4.2,
            "baseSeverity": "MEDIUM",
            "confidentialityImpact": "HIGH",
            "environmentalScore": 4.2,
            "environmentalSeverity": "MEDIUM",
            "integrityImpact": "NONE",
            "modifiedAttackComplexity": "HIGH",
            "modifiedAttackVector": "ADJACENT_NETWORK",
            "modifiedAvailabilityImpact": "NONE",
            "modifiedConfidentialityImpact": "HIGH",
            "modifiedIntegrityImpact": "NONE",
            "modifiedPrivilegesRequired": "HIGH",
            "modifiedScope": "UNCHANGED",
            "modifiedUserInteraction": "NONE",
            "privilegesRequired": "HIGH",
            "scope": "UNCHANGED",
            "temporalScore": 4.2,
            "temporalSeverity": "MEDIUM",
            "userInteraction": "NONE",
            "vectorString": "CVSS:3.1/AV:A/AC:H/PR:H/UI:N/S:U/C:H/I:N/A:N",
            "version": "3.1"
          },
          "products": [
            "urllib3@vers:pypi/>=2.0.0|<2.0.7"
          ]
        }
      ],
      "title": "CVE-2023-45803/pkg:pypi/urllib3@2.0.4"
    },
    {
      "acknowledgements": [
        {
          "organization": "NVD",
          "urls": [
            "https://nvd.nist.gov/vuln/detail/CVE-2023-43804"
          ]
        }
      ],
      "cve": "CVE-2023-43804",
      "cwe": {
        "id": "200",
        "name": "Exposure of Sensitive Information to an Unauthorized Actor"
      },
      "discovery_date": "2023-10-02T23:27:05",
      "ids": [
        {
          "system_name": "CVE Record",
          "text": "CVE-2023-43804"
        },
        {
          "system_name": "GitHub Advisory",
          "text": "GHSA-V845-JXX5-VC9F"
        },
        {
          "system_name": "GitHub Advisory",
          "text": "PYSEC-2023-192"
        }
      ],
      "notes": [
        {
          "category": "description",
          "details": "Vulnerability Description",
          "text": "`Cookie` HTTP header isn't stripped on cross-origin redirects"
        },
        {
          "category": "details",
          "details": "Vulnerability Details",
          "text": "# `Cookie` HTTP header isn't stripped on cross-origin redirects urllib3 doesn't treat the `Cookie` HTTP header special or provide any helpers for managing cookies over HTTP, that is the responsibility of the user. However, it is possible for a user to specify a `Cookie` header and unknowingly leak information via HTTP redirects to a different origin if that user doesn't disable redirects explicitly.  Users **must** handle redirects themselves instead of relying on urllib3's automatic redirects to achieve safe processing of the `Cookie` header, thus we decided to strip the header by default in order to further protect users who aren't using the correct approach.  ## Affected usages  We believe the number of usages affected by this advisory is low. It requires all of the following to be true to be exploited:  * Using an affected version of urllib3 (patched in v1.26.17 and v2.0.6) * Using the `Cookie` header on requests, which is mostly typical for impersonating a browser. * Not disabling HTTP redirects * Either not using HTTPS or for the origin server to redirect to a malicious origin.  ## Remediation  * Upgrading to at least urllib3 v1.26.17 or v2.0.6 * Disabling HTTP redirects using `redirects=False` when sending requests. * Not using the `Cookie` header.  ## Related CVE(s) CVE-2023-43804, PYSEC-2023-192"
        },
        {
          "category": "other",
          "text": "Update to version 2.0.6 to resolve CVE-2023-43804 or update to version 2.2.2 to resolve additional vulnerabilities for this package.",
          "title": "Recommended Action"
        }
      ],
      "product_status": {
        "known_affected": [
          "urllib3@vers:pypi/>=2.0.0|<2.0.6"
        ],
        "known_not_affected": [
          "urllib3@2.0.6"
        ]
      },
      "references": [
        {
          "summary": "GitHub Advisory",
          "url": "https://github.com/pypa/advisory-database/tree/main/vulns/urllib3/PYSEC-2023-192.yaml"
        },
        {
          "summary": "GitHub Advisory",
          "url": "https://github.com/urllib3/urllib3/security/advisories/GHSA-v845-jxx5-vc9f"
        },
        {
          "summary": "Debian Mailing List",
          "url": "https://lists.debian.org/debian-lts-announce/2023/10/msg00012.html"
        },
        {
          "summary": "Fedora Project Mailing List",
          "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5F5CUBAN5XMEBVBZPHFITBLMJV5FIJJ5"
        },
        {
          "summary": "Fedora Project Mailing List",
          "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/I3PR7C6RJ6JUBQKIJ644DMIJSUP36VDY"
        },
        {
          "summary": "Fedora Project Mailing List",
          "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/NDAGZXYJ7H2G3SB47M453VQVNAWKAEJJ"
        },
        {
          "summary": "CVE Record",
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-43804"
        }
      ],
      "scores": [
        {
          "cvss_v3": {
            "attackComplexity": "HIGH",
            "attackVector": "NETWORK",
            "availabilityImpact": "NONE",
            "baseScore": 5.9,
            "baseSeverity": "MEDIUM",
            "confidentialityImpact": "HIGH",
            "environmentalScore": 5.9,
            "environmentalSeverity": "MEDIUM",
            "integrityImpact": "HIGH",
            "modifiedAttackComplexity": "HIGH",
            "modifiedAttackVector": "NETWORK",
            "modifiedAvailabilityImpact": "NONE",
            "modifiedConfidentialityImpact": "HIGH",
            "modifiedIntegrityImpact": "HIGH",
            "modifiedPrivilegesRequired": "HIGH",
            "modifiedScope": "UNCHANGED",
            "modifiedUserInteraction": "NONE",
            "privilegesRequired": "HIGH",
            "scope": "UNCHANGED",
            "temporalScore": 5.9,
            "temporalSeverity": "MEDIUM",
            "userInteraction": "NONE",
            "vectorString": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:N",
            "version": "3.1"
          },
          "products": [
            "urllib3@vers:pypi/>=2.0.0|<2.0.6"
          ]
        }
      ],
      "title": "CVE-2023-43804/pkg:pypi/urllib3@2.0.4"
    },
    {
      "acknowledgements": [
        {
          "organization": "NVD",
          "urls": [
            "https://nvd.nist.gov/vuln/detail/CVE-2024-5569"
          ]
        }
      ],
      "cve": "CVE-2024-5569",
      "cwe": {
        "id": "400",
        "name": "Uncontrolled Resource Consumption"
      },
      "discovery_date": "2024-07-09T00:31:40",
      "ids": [
        {
          "system_name": "Huntr Advisory",
          "text": "BE898306-11F9-46B4-B28C-F4C4AA4FFBAE"
        },
        {
          "system_name": "CVE Record",
          "text": "CVE-2024-5569"
        }
      ],
      "notes": [
        {
          "category": "description",
          "details": "Vulnerability Description",
          "text": "zipp Denial of Service vulnerability"
        },
        {
          "category": "details",
          "details": "Vulnerability Details",
          "text": "# zipp Denial of Service vulnerability A Denial of Service (DoS) vulnerability exists in the jaraco/zipp library, affecting all versions prior to 3.19.1. The vulnerability is triggered when processing a specially crafted zip file that leads to an infinite loop. This issue also impacts the zipfile module of CPython, as features from the third-party zipp library are later merged into CPython, and the affected code is identical in both projects. The infinite loop can be initiated through the use of functions affecting the `Path` module in both zipp and zipfile, such as `joinpath`, the overloaded division operator, and `iterdir`. Although the infinite loop is not resource exhaustive, it prevents the application from responding. The vulnerability was addressed in version 3.19.1 of jaraco/zipp."
        },
        {
          "category": "other",
          "text": "Update to version 3.19.1.",
          "title": "Recommended Action"
        }
      ],
      "product_status": {
        "known_affected": [
          "zipp@vers:pypi/>=0.1.0|<=3.19.0"
        ],
        "known_not_affected": [
          "zipp@3.19.1"
        ]
      },
      "references": [
        {
          "summary": "Huntr Advisory",
          "url": "https://huntr.com/bounties/be898306-11f9-46b4-b28c-f4c4aa4ffbae"
        },
        {
          "summary": "CVE Record",
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-5569"
        }
      ],
      "scores": [
        {
          "cvss_v3": {
            "attackComplexity": "LOW",
            "attackVector": "LOCAL",
            "availabilityImpact": "HIGH",
            "baseScore": 6.2,
            "baseSeverity": "MEDIUM",
            "confidentialityImpact": "NONE",
            "environmentalScore": 6.2,
            "environmentalSeverity": "MEDIUM",
            "integrityImpact": "NONE",
            "modifiedAttackComplexity": "LOW",
            "modifiedAttackVector": "LOCAL",
            "modifiedAvailabilityImpact": "HIGH",
            "modifiedConfidentialityImpact": "NONE",
            "modifiedIntegrityImpact": "NONE",
            "modifiedPrivilegesRequired": "NONE",
            "modifiedScope": "UNCHANGED",
            "modifiedUserInteraction": "NONE",
            "privilegesRequired": "NONE",
            "scope": "UNCHANGED",
            "temporalScore": 6.2,
            "temporalSeverity": "MEDIUM",
            "userInteraction": "NONE",
            "vectorString": "CVSS:3.0/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "version": "3.0"
          },
          "products": [
            "zipp@vers:pypi/>=0.1.0|<=3.19.0"
          ]
        }
      ],
      "title": "CVE-2024-5569/pkg:pypi/zipp@3.16.2"
    }
  ]
}